## Copyright (C) 2003-2012, 2015-2019,2021 Free Software Foundation, Inc.
## Written by Keisuke Nishida, Roger While, Simon Sobisch, Edward Hart
##
## This file is part of GnuCOBOL.
##
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
##
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <https://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

### ISO+IEC+1989-2002 13.16.36 OCCURS clause
### ISO+IEC+1989-202x 3rd WD 13.18.38 OCCURS clause

## .2 Syntax rules


# 1a) level number rules (extended with level 78)

AT_SETUP([OCCURS with level 01 and 77])
#AT_KEYWORDS([occurs])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01          PIC X OCCURS 10.
       01 G             OCCURS 10.
         02 X-02        PIC X OCCURS 10.
       01 G2.
         02 X2-02       PIC X OCCURS 10.
       77 X-77          PIC X OCCURS 10.
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob:6: error: level 01 item 'X-01' cannot have a OCCURS clause
prog.cob:7: error: level 01 item 'G' cannot have a OCCURS clause
prog.cob:11: error: level 77 item 'X-77' cannot have a OCCURS clause
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY -ftop-level-occurs-clause=warning prog.cob], [0], [],
[prog.cob:6: warning: 01/77 OCCURS used
prog.cob:7: warning: 01/77 OCCURS used
prog.cob:11: warning: 01/77 OCCURS used
])

AT_CLEANUP


# FIXME: should be a single test but the error recovery is broken
#AT_SETUP([OCCURS with level 66 / 78 / 88])
#AT_KEYWORDS([RENAMES])
#
#AT_DATA([prog.cob], [
#       IDENTIFICATION   DIVISION.
#       PROGRAM-ID.      prog.
#       DATA             DIVISION.
#       WORKING-STORAGE  SECTION.
#       01  x PIC X.
#       66  y RENAMES x OCCURS 10.
#         88  y VALUE "a" OCCURS 10.
#         78  y VALUE "a" OCCURS 10.
#])
#
#AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
#[prog.cob:7: error: syntax error, unexpected OCCURS, expecting .
#prog.cob:8: error: syntax error, unexpected OCCURS, expecting .
#prog.cob:9: error: syntax error, unexpected OCCURS, expecting .
#])
#AT_CLEANUP


AT_SETUP([OCCURS with level 66])
AT_KEYWORDS([RENAMES])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  x PIC X.
       66  y RENAMES x OCCURS 10.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: syntax error, unexpected OCCURS
])

AT_CLEANUP


AT_SETUP([OCCURS with level 78])
#AT_KEYWORDS([occurs])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       78  c value "a" OCCURS 10.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:6: error: syntax error, unexpected OCCURS
])

AT_CLEANUP


AT_SETUP([OCCURS with level 88])
#AT_KEYWORDS([occurs])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  x PIC X.
           88  y VALUE "a" OCCURS 10.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: syntax error, unexpected OCCURS
])

AT_CLEANUP

# 1b) with ODO below (allowed with IBM extension)

AT_SETUP([OCCURS with variable-occurrence data item])
AT_KEYWORDS([nested depending extensions odo odoslide directive])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G-1.
         02 G-2         OCCURS 10.
           03 X         PIC X(10) OCCURS 1 TO 4 DEPENDING ON I.
       77 I             PIC 9.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G-1.
         02 G-2         OCCURS 1 TO 10 DEPENDING ON I.
           03 X         PIC X(10) OCCURS 1 TO 4 DEPENDING ON I.
       77 I             PIC 9.
       PROCEDURE        DIVISION.
           DISPLAY  X(I, I) END-DISPLAY
           DISPLAY  G-2 (I) END-DISPLAY
           DISPLAY  G-1     END-DISPLAY
           .

])

AT_DATA([prog3.cob], [
       $SET ODOSLIDE
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G-1.
         02 G-2         OCCURS 10.
           03 X         PIC X(10) OCCURS 1 TO 4 DEPENDING ON I.
       77 I             PIC 9.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: 'G-2' cannot have the OCCURS clause due to 'X'
])

AT_CHECK([$COMPILE_ONLY -fcomplex-odo prog.cob], [0], [], [])

AT_CHECK([$COMPILE_ONLY -fcomplex-odo prog2.cob], [1], [],
[prog2.cob:8: error: 'X' cannot have nested OCCURS DEPENDING
])

AT_CHECK([$COMPILE_ONLY -fodoslide prog2.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY prog3.cob prog2.cob], [1], [],
[prog2.cob:7: error: 'G-2' cannot have the OCCURS clause due to 'X'
prog2.cob:8: error: 'X' cannot have nested OCCURS DEPENDING
])

AT_CLEANUP


# 2) no subscript for key+index

AT_SETUP([OCCURS data-items for INDEXED and KEY])
AT_KEYWORDS([ASCENDING DESCENDING])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA  DIVISION.
       WORKING-STORAGE SECTION.
       01  . *> the "filler" explicit checks bug #776
           05  TAB-ENTRY1
                  OCCURS 5 TIMES
                  ASCENDING KEY IS X1
                                OF TAB-ENTRY1
                                OF TAB
                  INDEXED BY IDX1 OF TAB.
              10 X1 PIC 9.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:9: error: a subscripted data-item cannot be used here
prog.cob:12: error: a subscripted data-item cannot be used here
])

AT_CLEANUP

# 3) KEY specification

# 4) TODO

# 5) TODO

# 6) TODO

# 7) TODO

# 8) TODO


# 9) DONE

AT_SETUP([Nested OCCURS clause])
#AT_KEYWORDS([occurs])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G-1.
        02 G-2          OCCURS 2.
         03 G-3         OCCURS 2.
          04 G-4        OCCURS 2.
           05 G-5       OCCURS 2.
            06 G-6      OCCURS 2.
             07 G-7     OCCURS 2.
              08 G-8    OCCURS 2.
               09 X     PIC X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])

AT_CLEANUP


# 10) TODO

# 11) TODO

# 12) TODO

# 13) TODO

# 14) TODO

# 15) TODO

# in COBOL 2014 this is rule 16, not sure about COBOL 2002.
AT_SETUP([OCCURS DEPENDING with wrong size])
AT_KEYWORDS([range])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 FILLER.
         02 G-1         PIC X OCCURS  1 TO 1 DEPENDING ON I.
       01 FILLER.
         02 G-2         PIC X OCCURS -1 TO 1 DEPENDING ON I.
       01 FILLER.
         02 G-3         PIC X OCCURS +1 TO 1 DEPENDING ON I.
       01 FILLER.
         02 G-4         PIC X OCCURS  0 TO 1 DEPENDING ON I.
       01 I             PIC 9.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: OCCURS TO must be greater than OCCURS FROM
prog.cob:9: error: unsigned integer value expected
prog.cob:11: error: unsigned integer value expected
])

AT_CLEANUP


# 16) TODO

# 17) TODO

# 18) TODO

# 19) TODO


# 20) DONE

AT_SETUP([OCCURS DEPENDING followed by another field])
AT_KEYWORDS([extensions])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G-1.
         02 X           PIC X OCCURS 1 TO 3 DEPENDING ON I.
         02 Y           PIC X.
       01 G-2.
         02 G-3         OCCURS 1 TO 3 DEPENDING ON I.
           03 X         PIC X.
         02 Y           PIC X.
       01 G-4.
         02 G-5.
           03 X         PIC X OCCURS 1 TO 3 DEPENDING ON I.
         02 Y           PIC X.
       01 I             PIC 9.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: 'X' cannot have OCCURS DEPENDING because of 'Y'
prog.cob:10: error: 'G-3' cannot have OCCURS DEPENDING because of 'Y'
prog.cob:15: error: 'X' cannot have OCCURS DEPENDING because of 'Y'
])

AT_CHECK([$COMPILE_ONLY -fcomplex-odo prog.cob], [0], [], [])

AT_CLEANUP


# 21) TODO

# 22) TODO

# 23) TODO

# 24) 
# in COBOL 2014 this is rule 24, not sure about COBOL 2002.
# for X3-Test, see also bug #544
AT_SETUP([OCCURS with unmatched DEPENDING / TO phrases])
AT_KEYWORDS([odo])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 Y             PIC 9.
       01 XTAB.
          03 X  PIC X OCCURS 10 DEPENDING ON Y.
       01 XTAB2.
          03 X2 PIC X OCCURS 1 TO 10.
       01 XTAB3.
          03 X3 PIC X OCCURS 1 TO 10 DEPENDING ON MISSING.
       PROCEDURE DIVISION.
           MOVE 'A' TO X(1), X2(2), X3(3)
           GOBACK.
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob:8: error: OCCURS DEPENDING ON without TO phrase does not conform to COBOL 2014
prog.cob:10: error: TO phrase without DEPENDING phrase
prog.cob:12: error: 'MISSING' is not defined
])
AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:8: warning: OCCURS DEPENDING ON without TO phrase used
prog.cob:10: error: TO phrase without DEPENDING phrase
prog.cob:12: error: 'MISSING' is not defined
])
AT_CHECK([$COMPILE_ONLY -frelax-syntax prog.cob], [1], [],
[prog.cob:8: warning: OCCURS DEPENDING ON without TO phrase used
prog.cob:10: warning: TO phrase without DEPENDING phrase
prog.cob:10: note: maximum number of occurrences assumed to be exact number
prog.cob:12: error: 'MISSING' is not defined
])

AT_CLEANUP


# GnuCOBOL additional checks


AT_SETUP([OCCURS INDEXED before KEY])
AT_KEYWORDS([ASCENDING DESCENDING])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA  DIVISION.
       WORKING-STORAGE SECTION.
       01  TAB.
           05  TAB-ENTRY1
                  OCCURS 5 TIMES
                  INDEXED BY IDX1
                  ASCENDING KEY IS X1
                  DESCENDING Y1.
             10  X1 PIC 9(4).
             10  Y1 PIC X.
           05  TAB-ENTRY
                  OCCURS 2 TIMES
                  INDEXED BY IDX2
                  DESCENDING KEY IS X2
                  ASCENDING  Y2.
             10  X2 PIC 9(4).
             10  Y2 PIC X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:10: error: INDEXED should follow ASCENDING/DESCENDING
prog.cob:17: error: INDEXED should follow ASCENDING/DESCENDING
])

AT_CHECK([$COMPILE_ONLY -frelax-syntax-checks prog.cob], [0], [],
[prog.cob:10: warning: INDEXED should follow ASCENDING/DESCENDING
prog.cob:17: warning: INDEXED should follow ASCENDING/DESCENDING
])

AT_CLEANUP


AT_SETUP([OCCURS size check])
AT_KEYWORDS([limit])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X1.
          03 X  PIC X OCCURS 1530001234 TIMES.
       01 X2.
          03 X  PIC X OCCURS 2147483648 TIMES.
       01 X3.
          03 X  PIC X OCCURS 9223372036854775808 TIMES.
])

# Don't check actual output here as the actual limit depends on INT_MAX, therefore
# all entries may raise this error but only the last error message is guaranteed.
AT_CHECK([$COMPILE_ONLY prog.cob], [1], [], ignore)
AT_CHECK([$COMPILE_ONLY prog.cob 2>&1 | \
$GREP "prog.cob:11: error: numeric literal '9223372036854775808' exceeds limit"],
[0], ignore, [])

AT_CLEANUP

