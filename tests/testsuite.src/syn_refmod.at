## Copyright (C) 2003-2012, 2014-2015, 2017-2018, 2020-2021 Free Software Foundation, Inc.
## Written by Keisuke Nishida, Roger While, Simon Sobisch
##
## This file is part of GnuCOBOL.
## 
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
## 
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <https://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

### ISO+IEC+1989-2002 8.4.2.3 Reference-modification

## 8.4.2.3.3 General rules

AT_SETUP([valid reference modification])
AT_KEYWORDS([refmod])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X(4) VALUE "abcd".
       PROCEDURE        DIVISION.
           DISPLAY X(1:1) ":" X(1:2) ":" X(1:3) ":" X(1:4) ":" X(1:)
           END-DISPLAY.
           DISPLAY X(2:1) ":" X(2:2) ":" X(2:3) ":" X(2:)
           END-DISPLAY.
           DISPLAY X(3:1) ":" X(3:2) ":" X(3:)
           END-DISPLAY.
           DISPLAY X(4:1) ":" X(4:)
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([Static out of bounds])
AT_KEYWORDS([refmod])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X(4).
       01 Y             PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
           DISPLAY X(0:1)
           END-DISPLAY.
           DISPLAY X(0:Y)
           END-DISPLAY.
           DISPLAY X(5:1)
           END-DISPLAY.
           DISPLAY X(5:Y)
           END-DISPLAY.
           DISPLAY X(1:0)
           END-DISPLAY.
           DISPLAY X(Y:0)
           END-DISPLAY.
           DISPLAY X(1:5)
           END-DISPLAY.
           DISPLAY X(Y:5)
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -std=cobol2002 prog.cob], [1], [],
[prog.cob:9: error: offset must be greater than zero
prog.cob:11: error: offset must be greater than zero
prog.cob:13: error: offset of 'X' out of bounds: 5
prog.cob:15: error: offset of 'X' out of bounds: 5
prog.cob:17: error: length must be greater than zero
prog.cob:19: error: length must be greater than zero
prog.cob:21: error: length of 'X' out of bounds: 5
prog.cob:23: error: length of 'X' out of bounds: 5
])

AT_CLEANUP


AT_SETUP([constant-folding out of bounds])
AT_KEYWORDS([refmod expression])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       78 VAR-LEN       VALUE 4.
       01 X             PIC X(VAR-LEN).
       PROCEDURE        DIVISION.
           IF VAR-LEN < 4
              DISPLAY X(4 - VAR-LEN:1)
              END-DISPLAY
              DISPLAY X(1: 4 - VAR-LEN)
              END-DISPLAY
              DISPLAY X(9 - VAR-LEN:1)
              END-DISPLAY
              DISPLAY X(1:9 - VAR-LEN)
              END-DISPLAY
      *>      special test...
              INSPECT X CONVERTING "DEF"  TO X (1:0 + VAR-LEN)
           END-IF
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -fdiagnostics-show-option -Wno-constant-numlit-expression prog.cob], [0], [],
[prog.cob:10: warning: offset must be greater than zero [[-Wignored-error]]
prog.cob:12: warning: length must be greater than zero [[-Wignored-error]]
prog.cob:14: warning: offset of 'X' out of bounds: 5 [[-Wadditional]]
prog.cob:16: warning: length of 'X' out of bounds: 5 [[-Wadditional]]
prog.cob:19: warning: CONVERTING operands differ in size [[-Wignored-error]]
])
AT_CHECK([$COMPILE_ONLY  -Wno-constant-numlit-expression  -fno-constant-folding prog.cob],
[0], [], [])

AT_CLEANUP

AT_SETUP([Reference Bounds check])
AT_KEYWORDS([REFMOD])

AT_DATA([prog.cob], [       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA  DIVISION.
       WORKING-STORAGE SECTION.
       01  TSTLEN PIC 99 VALUE 10.
       01  TSTBIN PIC 99 COMP VALUE 10.
       01  TSTBIN10 PIC 9(9) COMP VALUE 825373492.
       01  TSTX4    PIC X(4).
       01  TSTREC.
         05  TSTTAIL2  PIC X.
         05  TSTTAIL3  PIC X.
         05  FILLER    PIC X(8).
         05  TSTEND    PIC X.
       01  TSTREC2 PIC X(20).
       01  TSTXX   PIC X(2).
       PROCEDURE DIVISION.
           MOVE "  " TO TSTTAIL2 (1:2).
           MOVE SPACES TO TSTTAIL3 (2:8).
           MOVE "  " TO TSTTAIL3 (1:15).
           MOVE ALL "*" TO TSTREC (-1:-1).
           MOVE "  " TO TSTTAIL2 (1:0).
           MOVE '$' TO TSTEND.
           DISPLAY "TSTREC is " TSTREC.
           MOVE ALL "+" TO TSTTAIL3 (0:TSTLEN).
           MOVE '$' TO TSTEND.
           DISPLAY "TSTREC is " TSTREC.
           MOVE 11 to TSTLEN.
           MOVE SPACES TO TSTTAIL2 (1:TSTLEN).
           MOVE '$' TO TSTEND.
           DISPLAY "TSTREC is " TSTREC.
           MOVE '12' TO TSTXX.
           MOVE TSTXX TO TSTLEN.
           DISPLAY "TSTLEN is " TSTLEN.
           MOVE ' 3' TO TSTXX.
           MOVE TSTXX TO TSTLEN.
           DISPLAY "TSTLEN is " TSTLEN.
           MOVE '  ' TO TSTXX.
           MOVE TSTXX TO TSTLEN.
           DISPLAY "TSTLEN is " TSTLEN.
           MOVE 75 TO TSTLEN.
           MOVE TSTLEN TO TSTXX.
           DISPLAY "TSTXX is " TSTXX " vs " TSTLEN.
           MOVE ' 3' TO TSTXX.
           MOVE TSTXX TO TSTBIN.
           DISPLAY "TSTBIN is " TSTBIN.
           ADD 1 to TSTBIN.
           MOVE TSTBIN TO TSTXX.
           DISPLAY "TSTXX is " TSTXX " vs " TSTBIN.
           MOVE TSTBIN10 (1:4) TO TSTX4 (1:4).
           DISPLAY "TSTBIN10 is " TSTBIN10 " vs '" TSTX4 "'".
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -std=cobol2002 prog.cob ], [1], [],
[prog.cob:17: error: length of 'TSTTAIL2' out of bounds: 2
prog.cob:18: error: offset of 'TSTTAIL3' out of bounds: 2
prog.cob:19: error: length of 'TSTTAIL3' out of bounds: 15
prog.cob:20: error: offset must be greater than zero
prog.cob:20: error: length must be greater than zero
prog.cob:21: error: length must be greater than zero
prog.cob:24: error: offset must be greater than zero
])

AT_CLEANUP

