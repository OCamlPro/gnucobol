## Copyright (C) 2003-2012, 2014-2015, 2017-2018, 2020-2021, 2023
## Free Software Foundation, Inc.
## Written by Keisuke Nishida, Roger While, Simon Sobisch
##
## This file is part of GnuCOBOL.
## 
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
## 
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <https://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

### ISO+IEC+1989-2002 8.4.2.3 Reference-modification

## 8.4.2.3.3 General rules

AT_SETUP([valid reference-modification])
AT_KEYWORDS([refmod])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X(4) VALUE "abcd".
       77 VAR           PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
           DISPLAY X(1:1) ":" X(1:2) ":" X(1:3) ":" X(1:4) ":" X(1:).
           DISPLAY X(2:1) ":" X(2:2) ":" X(2:3) ":" X(2:).
           DISPLAY X(3:1) ":" X(3:2) ":" X(3:).
           DISPLAY X(4:1) ":" X(4:).
           DISPLAY X(1:4)
           DISPLAY X(VAR:4)
           DISPLAY X(4:)
           DISPLAY X(4:VAR)
           STOP RUN.
])

AT_CHECK([$COMPILE -fdiagnostics-show-option prog.cob], [0], [],
[prog.cob:14: warning: suspicious reference-modification: always using max. length [[-Wothers]]
prog.cob:16: warning: suspicious reference-modification: always using max. position [[-Wothers]]
])

AT_CLEANUP

AT_SETUP([invalid reference-modification])
AT_KEYWORDS([refmod condition-name])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X(4) VALUE "abcd".
          88 X-AB       VALUE "AB".
       PROCEDURE        DIVISION.
           DISPLAY X-AB(1:1).
      *> TODO: more to add
           GOBACK.
])

AT_CHECK([$COMPILE prog.cob], [1], [],
[prog.cob:9: error: 'X-AB' cannot be reference modified
prog.cob:9: error: condition-name not allowed here: 'X-AB'
])

AT_CLEANUP


AT_SETUP([Static out of bounds])
AT_KEYWORDS([refmod])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X(4).
       01 Y             PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
           DISPLAY X(0:1)
           END-DISPLAY.
           DISPLAY X(0:Y)
           END-DISPLAY.
           DISPLAY X(5:1)
           END-DISPLAY.
           DISPLAY X(5:Y)
           END-DISPLAY.
           DISPLAY X(1:0)
           END-DISPLAY.
           DISPLAY X(Y:0)
           END-DISPLAY.
           DISPLAY X(1:5)
           END-DISPLAY.
           DISPLAY X(Y:5)
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:9: error: offset of 'X' out of bounds: 0
prog.cob:11: error: offset of 'X' out of bounds: 0
prog.cob:13: error: offset of 'X' out of bounds: 5
prog.cob:15: error: offset of 'X' out of bounds: 5
prog.cob:17: error: length of 'X' out of bounds: 0
prog.cob:19: error: length of 'X' out of bounds: 0
prog.cob:21: error: length of 'X' out of bounds: 5
prog.cob:23: error: length of 'X' out of bounds: 5
])

AT_CLEANUP


AT_SETUP([constant-folding out of bounds])
AT_KEYWORDS([refmod expression])

# note: actually checking out of bounds in general, too

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       78 VAR-LEN       VALUE 4.
       01 X             PIC X(VAR-LEN).
       PROCEDURE        DIVISION.
           IF VAR-LEN < 4
              DISPLAY X(4 - VAR-LEN:1)
              DISPLAY X(1: 4 - VAR-LEN)
              DISPLAY X(9 - VAR-LEN:1)
              DISPLAY X(1:9 - VAR-LEN)
      *>      special test...
              INSPECT X CONVERTING "DEF"  TO X (1:0 + VAR-LEN)
           END-IF
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -fdiagnostics-show-option -Wno-constant-numlit-expression prog.cob], [0], [],
[prog.cob:10: warning: offset of 'X' out of bounds: 0 [[-Wignored-error]]
prog.cob:11: warning: length of 'X' out of bounds: 0 [[-Wignored-error]]
prog.cob:12: warning: offset of 'X' out of bounds: 5 [[-Wignored-error]]
prog.cob:13: warning: length of 'X' out of bounds: 5 [[-Wignored-error]]
prog.cob:15: warning: CONVERTING operands differ in size [[-Wignored-error]]
])
AT_CHECK([$COMPILE_ONLY -Wno-constant-numlit-expression -fno-constant-folding prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([no static bound check for ANY LENGTH])
AT_KEYWORDS([refmod])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  POS          PIC 9(4).
       LINKAGE SECTION.
       01  TESTME PIC X ANY LENGTH.
       PROCEDURE        DIVISION USING TESTME.
       main.
           evaluate true
           when TESTME(POS:2) = ", "
                continue
           when TESTME(POS:1) = "," and TESTME(1 + POS:1) = " "
                display 'TESTME' pos 1525
           end-evaluate
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])

AT_CLEANUP
