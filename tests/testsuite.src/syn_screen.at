## Copyright (C) 2014-2021 Free Software Foundation, Inc.
## Written by Simon Sobisch, Edward Hart, Ron Norman
##
## This file is part of GnuCOBOL.
##
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
##
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <https://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

### ISO+IEC+1989-2014 13.9 SCREEN section


AT_SETUP([Flexible ACCEPT/DISPLAY syntax])
AT_KEYWORDS([screen ACCEPT DISPLAY])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           SYSERR IS ERR-STREAM
           .
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  a-field      PIC XXX.

       SCREEN           SECTION.
       01  scr.
           03 VALUE "blah" LINE 5 COL 5.

       PROCEDURE        DIVISION.
           *> Valid statements
           DISPLAY "123" "456" "789" NO ADVANCING
           DISPLAY "foo" COL 1 HIGHLIGHT AT LINE 1 WITH UNDERLINE,
               "bar", "foo"
           DISPLAY "a" UPON CRT, "b" LINE 3 COL 3, "c" UPON CRT-UNDER
           DISPLAY scr, scr

           ACCEPT a-field LINE 5 SIZE 3 AT COL 1 WITH AUTO
               REVERSE-VIDEO, BLINK

           *> invalid statements
           DISPLAY scr WITH NO ADVANCING
           DISPLAY scr, scr LINE 2 COL 2 UPON ERR-STREAM
           DISPLAY "foo" LINE 2 COL 2, scr
           DISPLAY "foo" LINE 2 COL 2, "bar" UPON ERR-STREAM
           DISPLAY "foo" LINE 1 UPON ERR-STREAM
           DISPLAY scr, "foo"
           .
       END PROGRAM prog.

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog-2.

       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           CONSOLE IS CRT
           .
       PROCEDURE DIVISION.
           DISPLAY "foo" NO ADVANCING
           .
       END PROGRAM prog-2.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:31: error: cannot specify NO ADVANCING in screen DISPLAY
prog.cob:31: error: screens may only be displayed on CRT
prog.cob:32: error: cannot mix screens and fields in the same DISPLAY statement
prog.cob:33: error: ambiguous DISPLAY; put items to display on device in separate DISPLAY
prog.cob:34: error: screen clauses may only be used for DISPLAY on CRT
prog.cob:35: error: cannot mix screens and fields in the same DISPLAY statement
prog.cob:49: error: cannot specify NO ADVANCING in screen DISPLAY
])

AT_CLEANUP


AT_SETUP([Duplicate ACCEPT/DISPLAY clauses])
AT_KEYWORDS([screen ACCEPT DISPLAY])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  a-field      PIC XXX.
       PROCEDURE        DIVISION.
           DISPLAY "foo" LINE 1 COL 1 HIGHLIGHT LINE 1 HIGHLIGHT
               AT 0101 MODE IS BLOCK MODE IS BLOCK
           ACCEPT a-field LINE 1 COL 1 HIGHLIGHT LINE 1 HIGHLIGHT
               AT 0101
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:8: error: duplicate LINE clause
prog.cob:8: error: duplicate HIGHLIGHT clause
prog.cob:9: error: cannot specify both AT screen-location and LINE or COLUMN
prog.cob:9: error: duplicate MODE IS BLOCK clause
prog.cob:10: error: duplicate LINE clause
prog.cob:10: error: duplicate HIGHLIGHT clause
prog.cob:11: error: cannot specify both AT screen-location and LINE or COLUMN
])
AT_CLEANUP


AT_SETUP([AT clause])
AT_KEYWORDS([screen extensions])

AT_DATA([prog.cob], [
       IDENTIFICATION  DIVISION.
       PROGRAM-ID.     prog.

       DATA            DIVISION.
       WORKING-STORAGE SECTION.
       01  curs-1      PIC 9(4) VALUE 00000000001111.
       01  curs-2.
           03  linee   PIC 999.
           03  coll    PIC 999.
       01  posc        CONSTANT 0101.

       01  curs-3      PIC 99.
       01  curs-4      PIC 9(8) VALUE 0101.
       01  curs-5      PIC X(4).

       PROCEDURE       DIVISION.
           *> Valid AT clauses
           DISPLAY "a" AT curs-1
           DISPLAY "a" AT curs-2
           DISPLAY "a" AT posc

           *> Invalid AT clauses
           DISPLAY "a" AT curs-3
           DISPLAY "a" AT curs-4
           DISPLAY "a" AT curs-5
           DISPLAY "a" AT 101
           DISPLAY "a" AT ZERO
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:24: error: value in AT clause must have 4 or 6 digits
prog.cob:25: error: value in AT clause must have 4 or 6 digits
prog.cob:26: error: value in AT clause is not numeric
prog.cob:27: error: value in AT clause must have 4 or 6 digits
prog.cob:29: error: cannot specify figurative constant ZERO in AT clause
])
AT_CLEANUP


AT_SETUP([ACCEPT/DISPLAY extensions detection])
AT_KEYWORDS([AT LINE COLUMN ACCEPT DISPLAY screen extensions])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  zero-const CONSTANT 0.
       01  x PIC 99.

       SCREEN SECTION.
       01  scr.
           03  y PIC 99 FROM x LINE 3 COLUMN 5.

       PROCEDURE DIVISION.
           DISPLAY "hello" AT 0000
           DISPLAY "world" LINE ZERO COLUMN zero-const
           ACCEPT x WITH TIME-OUT 5

           DISPLAY scr WITH UNDERLINE
           ACCEPT scr WITH HIGHLIGHT

           DISPLAY scr, scr

           *> Valid statements
           DISPLAY scr UPON CRT-UNDER
           ACCEPT scr AT LINE 4 COLUMN 4
           .
])

AT_CHECK([$COMPILE_ONLY -faccept-display-extensions=error prog.cob], [1], [],
[prog.cob:15: error: AT clause used
prog.cob:15: error: non-standard DISPLAY used
prog.cob:16: error: LINE 0 used
prog.cob:16: error: COLUMN 0 used
prog.cob:16: error: non-standard DISPLAY used
prog.cob:17: error: non-standard ACCEPT used
prog.cob:19: error: non-standard DISPLAY used
prog.cob:20: error: non-standard ACCEPT used
prog.cob:22: error: non-standard DISPLAY used
])
AT_CLEANUP


AT_SETUP([FROM clause])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       SCREEN  SECTION.
       01 SG.
          05 SI1   LINE 1 COL 1 PIC X FROM X.
          05 SI2   LINE 2 COL 1 PIC X FROM SPACE.
          05 SI2-2 LINE 2 COL 5 PIC X(03) FROM ALL SPACES.
          05 SI3   LINE 3 COL 1 PIC 9 FROM ZERO.
          05 SI3-2 LINE 3 COL 5 PIC X(03) FROM ALL ZEROES.
       PROCEDURE        DIVISION.
           DISPLAY SG END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([Incorrect USAGE clause])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID. prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       SCREEN  SECTION.
        01 SG.
           05 SI1    LINE 1 COL 1 PIC X FROM X.
           05 SI2    LINE 2 COL 1 PIC X FROM SPACE.
           05 SI2-2  LINE 2 COL 5 PIC X(03) FROM ALL SPACES.
           05 BAD1   LINE 4 COL 1 PIC 9 BINARY FROM ZERO.
           05 FILLER LINE 4 COL 10 PIC 9 COMP-5 FROM ZERO.
           05 BAD3   LINE 4 COL 5 COMP-2 FROM ALL ZEROES.
       PROCEDURE        DIVISION.
           DISPLAY SG END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [1], [],
[prog.cob:12: error: SCREEN SECTION item 'BAD1' should be USAGE DISPLAY
prog.cob:13: error: SCREEN SECTION item 'FILLER' should be USAGE DISPLAY
prog.cob:14: error: SCREEN SECTION item 'BAD3' should be USAGE DISPLAY
])

AT_CLEANUP


AT_SETUP([SCREEN SECTION clause numbers])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       SCREEN           SECTION.
       *> Valid numbers
       01  v1           VALUE "-" LINE 1.
       01  v2           VALUE "-" LINE + 1.
       01  v3           VALUE "-" LINE - 1.
       01  v4           VALUE "-" LINE 0.

       *> invalid numbers
       01  i1           VALUE "-" LINE +1.
       01  i2           VALUE "-" LINE -1.
       01  i3           VALUE "-" LINE 1.0.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:13: error: unsigned integer value expected
prog.cob:14: error: unsigned integer value expected
prog.cob:15: error: unsigned integer value expected
])

AT_CLEANUP


# ToDo: Add all clauses, maybe split into multiple tests
AT_SETUP([Screen clauses])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  foo          PIC X.
       SCREEN           SECTION.
       01  scr.
           03  a        PIC X TO foo FULL, LEFTLINE, OVERLINE, REQUIRED,
                        GRID.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:9: warning: LEFTLINE is not implemented
prog.cob:9: warning: OVERLINE is not implemented
prog.cob:10: warning: GRID is not implemented
])

AT_CLEANUP


AT_SETUP([ACCEPT ON EXCEPTION/ESCAPE])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  foo          PIC X.
       PROCEDURE        DIVISION.
           ACCEPT foo
               ON EXCEPTION
                   CONTINUE
               NOT EXCEPTION
                   CONTINUE
           END-ACCEPT

           ACCEPT foo
               ESCAPE
                   CONTINUE
               NOT ON ESCAPE
                   CONTINUE
           END-ACCEPT
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CLEANUP


AT_SETUP([Referencing 88-level])
# see bug #178
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  flag PIC X.
           88  blah VALUE "N".

       SCREEN           SECTION.
       01  scr.
           03  PIC X COLUMN blah TO blah FROM blah.

       PROCEDURE        DIVISION.
           ACCEPT scr
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:12: error: condition-name not allowed here: 'blah'
prog.cob:12: error: condition-name not allowed here: 'blah'
prog.cob:12: error: condition-name not allowed here: 'blah'
])

AT_CLEANUP


AT_SETUP([Conflicting screen clauses])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  x            PIC 999.

       SCREEN           SECTION.
       01  scr.
           03  VALUE "foo" HIGHLIGHT, LOWLIGHT;
                           ERASE EOL, ERASE EOS;
                           BLANK LINE, BLANK SCREEN.

       PROCEDURE        DIVISION.
           DISPLAY "blah" WITH HIGHLIGHT, LOWLIGHT;
                               ERASE EOL, ERASE EOS;
                               BLANK LINE, BLANK SCREEN;
                               SCROLL UP, SCROLL DOWN;

           ACCEPT x WITH AUTO, TAB; SCROLL UP, SCROLL DOWN;
               UPDATE, NO UPDATE

           SET scr ATTRIBUTE HIGHLIGHT ON, LOWLIGHT OFF
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:11: error: cannot specify both LOWLIGHT and HIGHLIGHT
prog.cob:12: error: cannot specify both ERASE EOS and ERASE EOL
prog.cob:13: error: cannot specify both BLANK SCREEN and BLANK LINE
prog.cob:16: error: cannot specify both LOWLIGHT and HIGHLIGHT
prog.cob:17: error: cannot specify both ERASE EOS and ERASE EOL
prog.cob:18: error: cannot specify both BLANK SCREEN and BLANK LINE
prog.cob:21: error: cannot specify both SCROLL DOWN and SCROLL UP
prog.cob:21: error: cannot specify both TAB and AUTO
prog.cob:22: error: cannot specify both SCROLL DOWN and SCROLL UP
prog.cob:22: error: cannot specify both NO UPDATE and UPDATE
prog.cob:24: error: cannot specify both HIGHLIGHT and LOWLIGHT
])

AT_CHECK([$COMPILE_ONLY -frelax-syntax-checks prog.cob], [1], [],
[prog.cob:11: warning: cannot specify both LOWLIGHT and HIGHLIGHT; LOWLIGHT is ignored
prog.cob:12: warning: cannot specify both ERASE EOS and ERASE EOL; ERASE EOS is ignored
prog.cob:13: warning: cannot specify both BLANK SCREEN and BLANK LINE; BLANK SCREEN is ignored
prog.cob:16: warning: cannot specify both LOWLIGHT and HIGHLIGHT; LOWLIGHT is ignored
prog.cob:17: warning: cannot specify both ERASE EOS and ERASE EOL; ERASE EOS is ignored
prog.cob:18: warning: cannot specify both BLANK SCREEN and BLANK LINE; BLANK SCREEN is ignored
prog.cob:21: warning: cannot specify both SCROLL DOWN and SCROLL UP; SCROLL DOWN is ignored
prog.cob:21: warning: cannot specify both TAB and AUTO; TAB is ignored
prog.cob:22: warning: cannot specify both SCROLL DOWN and SCROLL UP; SCROLL DOWN is ignored
prog.cob:22: warning: cannot specify both NO UPDATE and UPDATE; NO UPDATE is ignored
prog.cob:24: error: cannot specify both HIGHLIGHT and LOWLIGHT
])

AT_CLEANUP


AT_SETUP([Redundant screen clauses])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  x            PIC 999.

       SCREEN           SECTION.
       01  scr.
           03  HIGHLIGHT FULL.
               05  HIGHLIGHT FULL.
                   07  FULL FULL VALUE "foo".

       PROCEDURE        DIVISION.
           DISPLAY "hello" WITH BACKGROUND-COLOR 2, BACKGROUND-COLOR 2
           ACCEPT x WITH HIGHLIGHT, HIGHLIGHT, UPDATE, DEFAULT
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:13: error: duplicate FULL clause
prog.cob:16: error: duplicate BACKGROUND-COLOR clause
prog.cob:17: error: duplicate HIGHLIGHT clause
prog.cob:17: error: duplicate UPDATE clause
])

AT_CLEANUP


AT_SETUP([Screen item OCCURS w-/wo relative LINE/COL])
AT_KEYWORDS([occurs])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       SCREEN           SECTION.
       01 x-scr.
          03 x PIC X VALUE "a" OCCURS 10.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       DATA             DIVISION.
       SCREEN           SECTION.
       01 x-scr.
          03 x PIC X VALUE "a" OCCURS 10 COL  10.
       01 y-scr.
          03 y PIC X VALUE "a" OCCURS 10 LINE 10.
])

AT_DATA([prog3.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog3.
       DATA             DIVISION.
       SCREEN           SECTION.
       01 x-scr.
          03 x PIC X VALUE "a" OCCURS 10 COL  + 10.
       01 y-scr.
          03 y PIC X VALUE "a" OCCURS 10 LINE - 10.
       01 a-scr.
          03 a PIC X VALUE "a" OCCURS 10 COL  PLUS 10.
       01 b-scr.
          03 b PIC X VALUE "a" OCCURS 10 LINE MINUS 10.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: warning: OCCURS screen items is not implemented
prog.cob:7: error: relative LINE/COLUMN clause required with OCCURS
])

AT_CHECK([$COMPILE_ONLY prog2.cob], [1], [],
[prog2.cob:7: warning: OCCURS screen items is not implemented
prog2.cob:7: error: relative LINE/COLUMN clause required with OCCURS
prog2.cob:9: warning: OCCURS screen items is not implemented
prog2.cob:9: error: relative LINE/COLUMN clause required with OCCURS
])

AT_CHECK([$COMPILE_ONLY prog3.cob], [0], [],
[prog3.cob:7: warning: OCCURS screen items is not implemented
prog3.cob:9: warning: OCCURS screen items is not implemented
prog3.cob:11: warning: OCCURS screen items is not implemented
prog3.cob:13: warning: OCCURS screen items is not implemented
])

AT_CLEANUP


AT_SETUP([VALUE clause missing])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       SCREEN  SECTION.
       01 SG.
          05 LINE 21 COL 1 VALUE "TESTING".
          05 " IMPLICIT VALUE " HIGHLIGHT.
       PROCEDURE        DIVISION.
           DISPLAY SG END-DISPLAY.
           STOP RUN.
])

# Note: currently depends on -std, may also depend on -frelax-syntax-checks
AT_CHECK([$COMPILE_ONLY -std=cobol2002 prog.cob], [1], [],
[prog.cob:9: error: missing VALUE
])
AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([FULL on numeric item])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  num PIC 999.

       SCREEN SECTION.
       01  scr.
           03  full-pointless PIC 999 TO num FULL.
           03  full-useful PIC ZZZ TO num FULL.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:11: warning: FULL has no effect on numeric items; you may want REQUIRED or PIC Z
])

AT_CLEANUP


AT_SETUP([Compiler-specific SCREEN SECTION clause rules])
AT_KEYWORDS([screen])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  x PIC X.
       01  num PIC 9.

       SCREEN SECTION.
       01  scr.
           03  no-clauses.
           03  no-required-clauses BACKGROUND-COLOR 1.
           03  only-line LINE 1.
           03  numeric-pic-and-value PIC 999 VALUE 100.
           03  only-pic PIC 9.
           03  from-to-using-without-pic FROM x.
           03  auto-without-from-to-using PIC 9 AUTO.
           03  full-without-to-using PIC X FROM x FULL.
           03  full-and-justified PIC X USING x, FULL, JUST.
           03  secure-with-from PIC X FROM x SECURE.
           03  secure-justified-no-clauses VALUE "Hello" SECURE, JUST.
           03  blank-when-zero-without-pic FROM num, BLANK ZERO.
           03  justified-without-pic FROM x, JUST.
           03  sign-no-clauses PIC S9, SIGN LEADING SEPARATE.
           03  figurative-constant-value VALUE SPACES.
           03  only-erase ERASE EOL.
           03  only-blank BLANK SCREEN.
           03  only-bell BELL.
           03  numeric-value-no-pic VALUE 1.

       01 always-ok-scr.
           03  my-group LINE 1, COL 1, FULL.
               05  PIC X FROM "x" TO x.
               05  PIC Z USING num.
               05  VALUE "Hello, world!".
])

AT_CHECK([$COMPILE_ONLY -fscreen-section-rules=std prog.cob], [1], [],
[prog.cob:12: error: 'no-clauses' needs a PIC, FROM, TO, USING, VALUE, BELL, BLANK or ERASE clause
prog.cob:13: error: 'no-required-clauses' needs a PIC, FROM, TO, USING, VALUE, BELL, BLANK or ERASE clause
prog.cob:14: error: 'only-line' needs a PIC, FROM, TO, USING, VALUE, BELL, BLANK or ERASE clause
prog.cob:16: error: 'only-pic' cannot have PIC without FROM, TO, USING or numeric VALUE
prog.cob:17: warning: 'from-to-using-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:18: error: 'auto-without-from-to-using' cannot have PIC without FROM, TO, USING or numeric VALUE
prog.cob:20: error: cannot specify both FULL and JUSTIFIED
prog.cob:23: warning: 'blank-when-zero-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:24: warning: 'justified-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:25: error: 'sign-no-clauses' cannot have PIC without FROM, TO, USING or numeric VALUE
prog.cob:26: error: VALUE may not contain a figurative constant
prog.cob:30: warning: 'numeric-value-no-pic' has numeric VALUE without PIC; PIC will be implied
])

AT_CHECK([$COMPILE_ONLY -fscreen-section-rules=acu prog.cob], [1], [],
[prog.cob:15: error: cannot specify both PIC and VALUE
prog.cob:15: error: cannot have PIC without FROM, TO or USING
prog.cob:15: error: VALUE item may not be numeric
prog.cob:16: error: cannot have PIC without FROM, TO or USING
prog.cob:17: warning: 'from-to-using-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:18: error: cannot have PIC without FROM, TO or USING
prog.cob:22: error: cannot have JUSTIFIED without PIC
prog.cob:23: warning: 'blank-when-zero-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:23: error: cannot have BLANK WHEN ZERO without PIC
prog.cob:24: warning: 'justified-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:24: error: cannot have JUSTIFIED without PIC
prog.cob:25: error: cannot have PIC without FROM, TO or USING
prog.cob:30: error: VALUE item may not be numeric
])

AT_CHECK([$COMPILE_ONLY -fscreen-section-rules=mf prog.cob], [1], [],
[prog.cob:12: error: 'no-clauses' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:13: error: 'no-required-clauses' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:15: error: cannot specify both PIC and VALUE
prog.cob:15: error: cannot have PIC without FROM, TO or USING
prog.cob:15: error: VALUE item may not be numeric
prog.cob:16: error: cannot have PIC without FROM, TO or USING
prog.cob:17: error: 'from-to-using-without-pic' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:17: warning: 'from-to-using-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:18: error: cannot have PIC without FROM, TO or USING
prog.cob:18: error: cannot use AUTO, FULL, PROMPT, REQUIRED or SECURE on elementary item without TO or USING
prog.cob:19: error: cannot use AUTO, FULL, PROMPT, REQUIRED or SECURE on elementary item without TO or USING
prog.cob:21: error: cannot use AUTO, FULL, PROMPT, REQUIRED or SECURE on elementary item without TO or USING
prog.cob:22: error: cannot use AUTO, FULL, PROMPT, REQUIRED or SECURE on elementary item without TO or USING
prog.cob:22: error: cannot use BLANK WHEN ZERO, JUSTIFIED, OCCURS or SIGN on item without FROM, TO or USING
prog.cob:23: error: 'blank-when-zero-without-pic' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:23: warning: 'blank-when-zero-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:24: error: 'justified-without-pic' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:24: warning: 'justified-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:25: error: cannot have PIC without FROM, TO or USING
prog.cob:25: error: cannot use BLANK WHEN ZERO, JUSTIFIED, OCCURS or SIGN on item without FROM, TO or USING
prog.cob:26: error: VALUE may not contain a figurative constant
prog.cob:27: error: 'only-erase' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:30: error: VALUE item may not be numeric
prog.cob:36: error: cannot use AUTO, FULL, PROMPT, REQUIRED or SECURE on elementary item without TO or USING
])

AT_CHECK([$COMPILE_ONLY -fscreen-section-rules=rm prog.cob], [1], [],
[prog.cob:15: error: cannot specify both PIC and VALUE
prog.cob:15: error: cannot have PIC without FROM, TO or USING
prog.cob:15: error: VALUE item may not be numeric
prog.cob:16: error: cannot have PIC without FROM, TO or USING
prog.cob:17: error: cannot have FROM, TO or USING without PIC
prog.cob:18: error: cannot have PIC without FROM, TO or USING
prog.cob:22: error: cannot use AUTO, FULL, REQUIRED or SECURE on elementary item without FROM, TO or USING
prog.cob:22: error: cannot use BLANK WHEN ZERO, JUSTIFIED or SIGN without FROM, TO or USING
prog.cob:23: error: cannot have FROM, TO or USING without PIC
prog.cob:23: error: cannot use BLANK WHEN ZERO, JUSTIFIED or SIGN without FROM, TO or USING
prog.cob:24: error: cannot have FROM, TO or USING without PIC
prog.cob:24: error: cannot use BLANK WHEN ZERO, JUSTIFIED or SIGN without FROM, TO or USING
prog.cob:25: error: cannot have PIC without FROM, TO or USING
prog.cob:30: error: VALUE item may not be numeric
prog.cob:36: error: cannot use AUTO, FULL, REQUIRED or SECURE on elementary item without FROM, TO or USING
])

AT_CHECK([$COMPILE_ONLY -fscreen-section-rules=xopen prog.cob], [1], [],
[prog.cob:12: error: 'no-clauses' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:13: error: 'no-required-clauses' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:15: error: cannot specify both PIC and VALUE
prog.cob:15: error: cannot have PIC without FROM, TO or USING
prog.cob:15: error: VALUE item may not be numeric
prog.cob:16: error: cannot have PIC without FROM, TO or USING
prog.cob:17: error: 'from-to-using-without-pic' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:17: error: cannot have FROM, TO or USING without PIC
prog.cob:18: error: cannot have PIC without FROM, TO or USING
prog.cob:18: error: cannot have AUTO without FROM, TO or USING
prog.cob:19: error: cannot use FULL or REQUIRED on item without TO or USING
prog.cob:20: error: cannot specify both FULL and JUSTIFIED
prog.cob:21: error: SECURE can be used with TO only
prog.cob:22: error: SECURE must be used with TO
prog.cob:23: error: 'blank-when-zero-without-pic' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:23: error: cannot have FROM, TO or USING without PIC
prog.cob:24: error: 'justified-without-pic' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:24: error: cannot have FROM, TO or USING without PIC
prog.cob:25: error: cannot have PIC without FROM, TO or USING
prog.cob:27: error: 'only-erase' needs a PIC, COL, LINE, VALUE, BELL or BLANK clause
prog.cob:30: error: VALUE item may not be numeric
prog.cob:36: error: cannot use FULL or REQUIRED on item without TO or USING
])

AT_CHECK([$COMPILE_ONLY -fscreen-section-rules=gc prog.cob], [0], [],
[prog.cob:12: warning: 'no-clauses' does nothing
prog.cob:13: warning: 'no-required-clauses' does nothing
prog.cob:15: warning: 'numeric-pic-and-value' has numeric VALUE without PIC; PIC will be implied
prog.cob:16: warning: 'only-pic' does nothing
prog.cob:17: warning: 'from-to-using-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:18: warning: 'auto-without-from-to-using' does nothing
prog.cob:23: warning: 'blank-when-zero-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:24: warning: 'justified-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:25: warning: 'sign-no-clauses' does nothing
prog.cob:30: warning: 'numeric-value-no-pic' has numeric VALUE without PIC; PIC will be implied
])

AT_CLEANUP


AT_SETUP([MS-COBOL position-spec])
AT_KEYWORDS([screen position LIN COL])

# FIXME: WITH clause including a WITH COLUMN (both separate (working)
#        and combined - error - must be added

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 FIELD-A  PIC X(06) VALUE "ms-cob".
       01 A        PIC X.
       PROCEDURE        DIVISION.
           DISPLAY ERASE
           MOVE 10 TO LIN. MOVE 15 TO COL.
           DISPLAY (LIN , COL - 3) FIELD-A.
           DISPLAY (LIN + 1 , COL) FIELD-A.
           ACCEPT  (   , 10) A.
           DISPLAY (08 , 12) FIELD-A.
           ACCEPT  (   , 08) A WITH NO-ECHO.
           DISPLAY FIELD-A AT LINE 06  COLUMN 12.
           ACCEPT  A       AT COLUMN 8.
           SUBTRACT 2 FROM LIN.
           SUBTRACT 3 FROM COL.
           DISPLAY FIELD-A AT LINE LIN COLUMN COL.
           ACCEPT  (   , 10) A.
           DISPLAY ( 1 , 1 ) ERASE.
           DISPLAY ( 2 , 1 ) "Field value : ", FIELD-A.
           DISPLAY ( 3 , 1 ) A " --> A value"
           DISPLAY ( 5 , 1 ) "Press ENTER to exit".
           ACCEPT (11 , 1 ) A.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:10: error: 'LIN' is not defined
prog.cob:10: error: syntax error, unexpected COL
prog.cob:11: error: syntax error, unexpected COL, expecting Literal or [)] or Identifier
prog.cob:12: error: syntax error, unexpected COL, expecting Literal or [)] or Identifier
prog.cob:19: error: syntax error, unexpected COL
prog.cob:20: error: syntax error, unexpected COL, expecting Literal or Identifier or ZERO
])
AT_CHECK([$COMPILE_ONLY -fregister=LIN,COL prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([Screen with invalid FROM clause])
AT_KEYWORDS([screen constant])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  some-const CONSTANT AS '123'.

       SCREEN SECTION.
       01  bild.
           05 from-constant-with-size   FROM some-const.
           05 from-constant-without-pic FROM ZERO.
           05 LINE 24 COL 1 FROM message.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:13: error: syntax error, unexpected MESSAGE
prog.cob:11: warning: 'from-constant-with-size' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:12: warning: 'from-constant-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:12: error: PICTURE clause required for 'from-constant-without-pic'
])
AT_CHECK([$COMPILE_ONLY -fnot-reserved=MESSAGE prog.cob], [1], [],
[prog.cob:13: error: 'message' is not defined, but is a reserved word in another dialect                                            
prog.cob:11: warning: 'from-constant-with-size' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:12: warning: 'from-constant-without-pic' has FROM, TO or USING without PIC; PIC will be implied
prog.cob:12: error: PICTURE clause required for 'from-constant-without-pic'
prog.cob:13: warning: 'FILLER' has FROM, TO or USING without PIC; PIC will be implied                                              
])

AT_CLEANUP
