## Copyright (C) 2003-2012, 2016-2021 Free Software Foundation, Inc.
## Written by Keisuke Nishida, Roger While, Edward Hart, Simon Sobisch
##
## This file is part of GnuCOBOL.
##
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
##
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <https://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

###
### Invalid PROGRAM-ID
###

AT_SETUP([Invalid source name])
AT_KEYWORDS([definition])

AT_DATA([short.cob], [])

AT_CHECK([$COMPILE_ONLY short.cob], [1], [],
[short.cob: error: invalid file base name 'short' - name duplicates a 'C' keyword
])

AT_CLEANUP


AT_SETUP([Invalid PROGRAM-ID])
AT_KEYWORDS([definition])

AT_DATA([SHORT.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      short.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY SHORT.cob], [1], [],
[SHORT.cob:3: error: invalid PROGRAM-ID 'short' - name duplicates a 'C' keyword
])

AT_CLEANUP


AT_SETUP([Invalid PROGRAM-ID type clause (1)])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog IS COMMON.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:3: error: COMMON may only be used in a contained program
])

AT_CLEANUP


AT_SETUP([invalid PROGRAM-ID type clause (2)])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog IS INITIAL RECURSIVE.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:3: error: syntax error, unexpected RECURSIVE, expecting .
])

AT_CLEANUP


AT_SETUP([INITIAL / RECURSIVE before COMMON])
AT_KEYWORDS([PROGRAM-ID definition])

AT_DATA([containing-prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      containing-prog.

       PROCEDURE        DIVISION.

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog-1 IS INITIAL COMMON.
       PROCEDURE        DIVISION.
           STOP RUN.
       END PROGRAM      prog-1.

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog-2 IS RECURSIVE COMMON.
       PROCEDURE        DIVISION.
           STOP RUN.
       END PROGRAM      prog-2.
])

AT_CHECK([$COMPILE_ONLY containing-prog.cob], [0], [], [])

AT_CLEANUP

###
### Data name
###

## Undefined

AT_SETUP([Undefined data name])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           DISPLAY X
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:5: error: 'X' cannot be used here
])

AT_CLEANUP


AT_SETUP([Undefined group name])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       PROCEDURE        DIVISION.
           DISPLAY X IN G
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:8: error: 'X IN G' is not defined
])

AT_CLEANUP


AT_SETUP([Undefined data name in group])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G.
         02 X           PIC X.
       01 Y             PIC X.
       PROCEDURE        DIVISION.
           DISPLAY Y IN G
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:10: error: 'Y IN G' is not defined
])

AT_CLEANUP


AT_SETUP([Reference not a group name])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       PROCEDURE        DIVISION.
           DISPLAY X IN X
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:8: error: 'X IN X' is not defined
])

AT_CLEANUP


AT_SETUP([Incomplete 01 definition])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:6: error: PICTURE clause required for 'X'
])

AT_CLEANUP


AT_SETUP([error handling in conditions])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 TESTME PIC X(1).

       PROCEDURE DIVISION.

          EVALUATE TRUE
            WHEN TESTME IS NOT-DEFINED
              CONTINUE
            WHEN TESTME = 'A'
              CONTINUE
            WHEN OTHER
              IF NOT TESTME IS NOT-DEFINED
              THEN
                CONTINUE
              ELSE
                CONTINUE
              END-IF
          END-EVALUATE
          EVALUATE TRUE
            WHEN TESTME IS 'ABC'
              CONTINUE
            WHEN TESTME = 'B'
              CONTINUE
          END-EVALUATE
          EVALUATE TRUE
            WHEN TESTME IS TESTME
              CONTINUE
            WHEN TESTME = 'C'
              CONTINUE
          END-EVALUATE
          EVALUATE TRUE
            WHEN TESTME NOT = NOT-DEFINED
              CONTINUE
            WHEN TESTME = 'D'
              CONTINUE
          END-EVALUATE
          EVALUATE TRUE
            WHEN TESTME ELSE NOT-DEFINED
              CONTINUE
            WHEN TESTME = 'E'
              CONTINUE
          END-EVALUATE
          EVALUATE broken
            WHEN NOT-DEFINED
              continue
          END-EVALUATE

          GOBACK.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:11: error: syntax error, unexpected Identifier
prog.cob:16: error: syntax error, unexpected Identifier
prog.cob:24: error: syntax error, unexpected Literal
prog.cob:30: error: syntax error, unexpected Identifier
prog.cob:36: error: 'NOT-DEFINED' is not defined
prog.cob:42: error: syntax error, unexpected ELSE
prog.cob:42: error: syntax error, unexpected Identifier
prog.cob:42: error: invalid expression
prog.cob:47: error: 'broken' is not defined
])
AT_CLEANUP


## Same labels in different sections

AT_SETUP([Same labels in different sections])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
       S-1 SECTION.
       L.

       S-2 SECTION.
       L.

       S-3 SECTION.
            GO TO L.
       L.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CLEANUP


## Redefinition (no issue if not referenced)

AT_SETUP([Redefinition of 01 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       01 X             PIC X.
])

AT_CHECK([$COBC -fsyntax-only prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:7: warning: redefinition of 'X'
prog.cob:6: note: 'X' previously defined here
])
AT_CHECK([$COMPILE_ONLY -Wno-redefinition prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY -Werror=redefinition prog.cob], [1], [],
[[prog.cob:7: error: redefinition of 'X'
prog.cob:6: note: 'X' previously defined here
]])
AT_CHECK([$COMPILE_ONLY -fdiagnostics-show-option -Werror=redefinition prog.cob], [1], [],
[[prog.cob:7: error: redefinition of 'X' [-Werror=redefinition]
prog.cob:6: note: 'X' previously defined here [-Werror=redefinition]
]])
AT_CLEANUP


AT_SETUP([Redefinition of 01 and 02 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X.
         02 X           PIC X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:7: warning: redefinition of 'X'
prog.cob:6: note: 'X' previously defined here
])

AT_CLEANUP


AT_SETUP([Redefinition of 02 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G.
         02 X           PIC X.
         02 X           PIC X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:8: warning: redefinition of 'X'
prog.cob:7: note: 'X' previously defined here
])

AT_CLEANUP


AT_SETUP([Redefinition of 77 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC X.
       77 X             PIC X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:7: warning: redefinition of 'X'
prog.cob:6: note: 'X' previously defined here
])

AT_CLEANUP


AT_SETUP([Redefinition of 01 and 77 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       77 X             PIC X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:7: warning: redefinition of 'X'
prog.cob:6: note: 'X' previously defined here
])

AT_CLEANUP


AT_SETUP([Redefinition of 88 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
         88 A           VALUE "A".
         88 A           VALUE "B".
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:8: warning: redefinition of 'A'
prog.cob:7: note: 'A' previously defined here
])

AT_CLEANUP


AT_SETUP([Redefinition of program-name by other programs])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  PROG         PIC X.

       PROCEDURE        DIVISION.
           CONTINUE
           .
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      foo COMMON.
       END PROGRAM      foo.

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      barr.
       PROCEDURE        DIVISION.
           CONTINUE
           .
       *> This should cause an error (clashes with COMMON subprog foo)
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      foo.
       END PROGRAM      foo.
       END PROGRAM      barr.
       END PROGRAM      prog.


       *> This should cause an error.
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  foo          PIC X.

       PROCEDURE        DIVISION.
           CONTINUE
           .
       *> This should clash with the data definition.
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      foo.
       END PROGRAM      foo.
       END PROGRAM      prog.

       *> This should cause an error
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      samename.
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      samename.
       END PROGRAM      samename.
       END PROGRAM      samename.
])

AT_CHECK([$COMPILE_ONLY --ffold-call=upper -fdiagnostics-show-option prog.cob], [1], [],
[[prog.cob:7: warning: redefinition of 'prog' [-Wredefinition]
prog.cob:3: note: 'prog' previously defined here [-Wredefinition]
prog.cob:23: error: redefinition of program name 'foo'
prog.cob:31: error: redefinition of program name 'prog'
prog.cob:42: error: redefinition of 'foo'
prog.cob:35: note: 'foo' previously defined here [-Wredefinition]
prog.cob:42: error: redefinition of program name 'foo'
prog.cob:49: error: PROCEDURE DIVISION header missing
prog.cob:50: error: redefinition of program name 'samename'
]])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:23: error: redefinition of program ID 'foo'
prog.cob:31: error: redefinition of program ID 'prog'
prog.cob:42: error: redefinition of program ID 'foo'
prog.cob:49: error: PROCEDURE DIVISION header missing
prog.cob:50: error: redefinition of program ID 'samename'
])

AT_CLEANUP


AT_SETUP([Redefinition of program-name within program])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION  DIVISION.
       PROGRAM-ID.     prog.

       DATA            DIVISION.
       WORKING-STORAGE SECTION.
       01  prog        PIC 99 VALUE 0.

       PROCEDURE       DIVISION.
       prog.
           CONTINUE
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:10: error: redefinition of 'prog'
prog.cob:7: note: 'prog' previously defined here
])
AT_CHECK([$COMPILE_ONLY -fno-program-name-redefinition prog.cob], [1], [],
[prog.cob:7: warning: redefinition of 'prog'
prog.cob:3: note: 'prog' previously defined here
prog.cob:10: error: redefinition of 'prog'
prog.cob:3: note: 'prog' previously defined here
])
AT_CLEANUP


AT_SETUP([Redefinition of function-prototype name])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       REPOSITORY.
           FUNCTION func
           .
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  func         PIC X.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:8: warning: no definition/prototype seen for FUNCTION 'func'
prog.cob:12: error: syntax error, unexpected user function name
])
AT_CLEANUP


# Disallow PROCEDURE DIVISION RETURNING OMITTED for main
AT_SETUP([PROCEDURE DIVISION RETURNING OMITTED: main])
AT_KEYWORDS([runmisc])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION RETURNING OMITTED.
           MOVE 42 TO RETURN-CODE
           GOBACK.
])


AT_CHECK([$COMPILE_MODULE prog.cob], [0], [], [])
AT_CHECK([$COMPILE prog.cob], [1], [],
[prog.cob:4: error: RETURNING clause cannot be OMITTED for main program
])

AT_CLEANUP


AT_SETUP([PROCEDURE DIVISION RETURNING OMITTED: FUNCTION])
AT_KEYWORDS([runmisc])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       FUNCTION-ID.     func.
       PROCEDURE        DIVISION RETURNING OMITTED.
           MOVE 42 TO RETURN-CODE
           GOBACK.
       END FUNCTION     func.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:4: error: RETURNING clause cannot be OMITTED for a FUNCTION
])

AT_CLEANUP


AT_SETUP([PROCEDURE DIVISION RETURNING item])
AT_KEYWORDS([runmisc])


AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       FUNCTION-ID.     func.
       DATA             DIVISION.
       LINKAGE          SECTION.
       01 PAR-OUT       PIC 9.
       PROCEDURE        DIVISION RETURNING PAR-OUT.
           MOVE 4 TO PAR-OUT
           GOBACK.
       END FUNCTION     func.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       FUNCTION-ID.     func.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 PAR-OUT       PIC 9.
       PROCEDURE        DIVISION RETURNING PAR-OUT.
           MOVE 4 TO PAR-OUT
           GOBACK.
       END FUNCTION     func.
])

AT_DATA([prog3.cob], [
       IDENTIFICATION   DIVISION.
       FUNCTION-ID.     func.
       DATA             DIVISION.
       LINKAGE          SECTION.
       01 PAR-OUT       PIC 9 OCCURS 10.
       PROCEDURE        DIVISION RETURNING PAR-OUT.
           MOVE 4 TO PAR-OUT (1)
           GOBACK.
       END FUNCTION     func.
])

AT_DATA([prog4.cob], [
       IDENTIFICATION   DIVISION.
       FUNCTION-ID.     func.
       DATA             DIVISION.
       LINKAGE          SECTION.
       01 PAR.
          02 PAR-OUT    PIC 9.
       PROCEDURE        DIVISION RETURNING PAR-OUT.
           MOVE 4 TO PAR-OUT
           GOBACK.
       END FUNCTION     func.
])

AT_DATA([prog5.cob], [
       IDENTIFICATION   DIVISION.
       FUNCTION-ID.     func.
       DATA             DIVISION.
       LINKAGE          SECTION.
       01 PAR           PIC 9.
       PROCEDURE        DIVISION USING PAR RETURNING PAR.
           MOVE 4 TO PAR
           GOBACK.
       END FUNCTION     func.

       IDENTIFICATION   DIVISION.
       FUNCTION-ID.     func2.
       DATA             DIVISION.
       LINKAGE          SECTION.
       01 PAR-IN        PIC 9.
       01 PAR-OUT       REDEFINES PAR-IN PIC 9.
       PROCEDURE        DIVISION USING PAR-IN RETURNING PAR-OUT.
           MOVE 4 TO PAR-OUT
           GOBACK.
       END FUNCTION     func2.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY prog2.cob], [1], [],
[prog2.cob:7: error: RETURNING item is not defined in LINKAGE SECTION
])
AT_CHECK([$COMPILE_ONLY prog3.cob], [1], [],
[prog3.cob:7: error: RETURNING item should not have OCCURS
prog3.cob:9: error: 'PAR-OUT' requires one subscript
])
AT_CHECK([$COMPILE_ONLY prog4.cob], [1], [],
[prog4.cob:8: error: RETURNING item must have level 01
])
AT_CHECK([$COMPILE_ONLY prog5.cob], [1], [],
[prog5.cob:7: error: 'PAR' USING item duplicates RETURNING item
prog5.cob:18: error: 'PAR-OUT' REDEFINES field not allowed here
])

AT_CLEANUP


AT_SETUP([Data item with same name as program-name])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION  DIVISION.
       FUNCTION-ID.    x.
       DATA            DIVISION.
       LINKAGE         SECTION.
       01  ret         PIC 99.
       PROCEDURE       DIVISION RETURNING ret.
           CONTINUE
           .
       END FUNCTION x.


       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  x            PIC 999 VALUE 134.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CLEANUP

## Ambiguous reference

AT_SETUP([Ambiguous reference to 02 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC X.
       01 G2.
         02 X           PIC X.
       PROCEDURE        DIVISION.
           DISPLAY X
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:11: error: 'X' is ambiguous; needs qualification
prog.cob:7: note: 'X IN G1' defined here
prog.cob:9: note: 'X IN G2' defined here
])

AT_CLEANUP


AT_SETUP([Ambiguous reference to 02 and 03 items])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G.
         02 X.
           03 X         PIC X.
       PROCEDURE        DIVISION.
           DISPLAY X
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:10: error: 'X' is ambiguous; needs qualification
prog.cob:7: note: 'X IN G' defined here
prog.cob:8: note: 'X IN X IN G' defined here
])

AT_CLEANUP


AT_SETUP([Ambiguous reference with qualification])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X.
           03 Y         PIC X.
       01 G2.
         02 X.
           03 Y         PIC X.
       PROCEDURE        DIVISION.
           DISPLAY Y IN X
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:13: error: 'Y IN X' is ambiguous; needs qualification
prog.cob:8: note: 'Y IN X IN G1' defined here
prog.cob:11: note: 'Y IN X IN G2' defined here
])

AT_CLEANUP


AT_SETUP([Unique reference with ambiguous qualifiers])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X.
           03 Y         PIC X VALUE "Y".
       01 G2.
         02 X.
           03 Z         PIC X VALUE "Z".
       PROCEDURE        DIVISION.
           DISPLAY Z IN X NO ADVANCING
           END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([SYNCHRONIZED clause])
AT_KEYWORDS([definition sync])

# GC simply ignored RIGHT which is wrong according to ANSI/ISO;
# most dialects just skip this, but according to docs IBM handles it

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77  CS-FULL            PICTURE 9(4) COMPUTATIONAL SYNCHRONIZED.
       77  CS                 PIC 9(4) COMP SYNC.
       77  CSL                PIC 9(4) COMP SYNC LEFT.
       77  CSR                PIC 9(4) COMP SYNC RIGHT.
       PROCEDURE        DIVISION.
           MOVE 1 TO CS-FULL, CS, CSL, CSR.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -std=mf prog.cob], [0], [], [])
# currently is:
AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:8: warning: SYNCHRONIZED LEFT/RIGHT is not implemented
prog.cob:9: warning: SYNCHRONIZED LEFT/RIGHT is not implemented
])
# TODO: should be
#AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])

AT_CLEANUP


###
### File name
###


###
### Label name
###

## Undefined

AT_SETUP([Undefined procedure name])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           GO TO END-OF-PROGRAM.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:5: error: 'END-OF-PROGRAM' is not defined
])

AT_CLEANUP


## Redefinition

AT_SETUP([Redefinition of section names])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
       L SECTION.
       L SECTION.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: in section 'L':
prog.cob:6: error: redefinition of 'L'
prog.cob:5: note: 'L' previously defined here
])

# FIXME: as long as there is no direct reference to the section
#        this should be not more than a warning,
#        maybe depending on a compiler configuration

AT_CLEANUP


AT_SETUP([Redefinition of section and paragraph names])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
       L SECTION.
       L.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: in section 'L':
prog.cob:6: error: redefinition of 'L'
prog.cob:5: note: 'L' previously defined here
])

# FIXME: as long as there is no direct reference to
#        the paragraph/section this should be not more
#        than a warning, maybe depending on a compiler
#        configuration

AT_CLEANUP


AT_SETUP([Redefinition of label and variable names])
AT_KEYWORDS([definition])

# currently failing, see FR #260
AT_XFAIL_IF(true)

AT_DATA([prog.cob], [
       identification division.
       program-id. WORD.
       data division.
       working-storage section.
      *-----------------------------------------------------------------
       77 word pic 9.
      *-----------------------------------------------------------------
       PROCEDURE DIVISION.
       main section.
      *
           move 0 to word
           perform word
      *
           stop run returning word.
      *-----------------------------------------------------------------
       word section.
           add 1 to word.
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob: in section 'main':
prog.cob:17: error: user-defined word re-used with different type does not conform to COBOL 2014
prog.cob:17: error: redefinition of 'word' as label-name
prog.cob:7: note: 'word' previously defined here as data-name
])
AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([Redefinition of paragraph names])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
       L.
       L.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[])

## Change when we DON'T allow this (likely as a warning,
## depending on compiler configuration)
## AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
## [prog.cob: in paragraph 'L':
## prog.cob:6: error: redefinition of 'L'
## prog.cob:5: error: 'L' previously defined here
## ])

AT_CLEANUP


AT_SETUP([Ambiguous reference to paragraph name])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
       S-1 SECTION.
       L.
       S-2 SECTION.
       L.
       S-3 SECTION.
           GO TO L.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: in section 'S-3':
prog.cob:10: error: 'L' is ambiguous; needs qualification
prog.cob:6: note: 'L IN S-1' defined here
prog.cob:8: note: 'L IN S-2' defined here
])

AT_CLEANUP


AT_SETUP([Non-matching level numbers (extension)])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  A.
            05 B.
                10 C PIC X.
           04 D.
            05 E PIC X.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -frelax-level-hierarchy prog.cob], [0], [],
[prog.cob:9: warning: no previous data item of level 04
])

AT_CLEANUP


AT_SETUP([CALL BY VALUE alphanumeric item (extension)])
AT_KEYWORDS([definition CONTENT])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  X            PIC X(4).
       PROCEDURE        DIVISION.
           CALL "PROG2" USING BY VALUE X
           END-CALL.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:8: warning: BY CONTENT assumed for alphanumeric item 'X'
])

AT_CLEANUP


AT_SETUP([CALL BY VALUE national item (extension)])
AT_KEYWORDS([definition CONTENT])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  N            PIC N(4).
       PROCEDURE        DIVISION.
           CALL "PROG2" USING BY VALUE N
           END-CALL.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:6: warning: handling of USAGE NATIONAL is unfinished; implementation is likely to be changed
prog.cob:8: warning: BY CONTENT assumed for national item 'N'
])

AT_CLEANUP


AT_SETUP([CALL BY VALUE figurative constants])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           CALL "PROG2" USING BY VALUE
                low-value
                high-value
                space
                quote
                zero
           END-CALL.
           CALL "PROG2" USING
                low-value
                high-value
                space
                quote
                zero
           END-CALL.
           CALL "PROG3" USING
                null
           END-CALL.
           STOP RUN.
])

# FIXME: should raise an error with -std=cobolNNNN, no warning with -std=default
# -->    revise after rw-merge
AT_CHECK([$COMPILE_ONLY -w prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([Duplicate identification division header])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:3: error: syntax error, unexpected IDENTIFICATION, expecting FUNCTION-ID or PROGRAM-ID
])
AT_CLEANUP


AT_SETUP([RETURNING in STOP RUN / GOBACK / EXIT PROGRAM])
AT_KEYWORDS([definition RETURN-CODE])

AT_DATA([prog1.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog1.
       PROCEDURE        DIVISION.
           EXIT PROGRAM RETURNING -1.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       PROCEDURE        DIVISION.
           GOBACK GIVING 2.
])

AT_DATA([prog3.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog3.
       PROCEDURE        DIVISION.
           STOP RUN GIVING 0.
])

AT_DATA([prog4.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog4.
       PROCEDURE        DIVISION.
           MOVE 42 TO RETURN-CODE
           GOBACK.
])

AT_DATA([prog5.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog5.
       PROCEDURE        DIVISION.
           GOBACK.
])

AT_CHECK([$COMPILE prog1.cob prog2.cob prog3.cob prog4.cob prog5.cob],
[0], [], [])
AT_CHECK([$COMPILE -fnot-register=return-code \
prog1.cob prog2.cob prog3.cob prog4.cob prog5.cob], [1], [],
[prog1.cob:5: error: RETURNING/GIVING not allowed for non-returning runtime elements
prog2.cob:5: error: RETURNING/GIVING not allowed for non-returning runtime elements
prog4.cob:5: error: 'RETURN-CODE' is not defined
])

AT_CLEANUP


AT_SETUP([OSVS register CURRENT-DATE and TIME-OF-DAY])
AT_KEYWORDS([definition])

# special "special register" - the value is dynamic like a function so needs to
# be either handled as an "internal" function call with c/s reserved words or
# new codegen branch for "set variable on use" which would allow register handling

AT_XFAIL_IF(true)

AT_DATA([prog1.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog1.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77 display-out   pic x(10).
       PROCEDURE        DIVISION.
           MOVE CURRENT-DATE TO DISPLAY-OUT
           MOVE TIME-OF-DAY  TO DISPLAY-OUT
           STOP RUN.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77 current-date  pic x(08).
       PROCEDURE        DIVISION.
           MOVE 'unknown' TO CURRENT-DATE
           STOP RUN.
])

AT_DATA([prog3.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog3.
       PROCEDURE        DIVISION.
           MOVE 'unknown' TO CURRENT-DATE
           STOP RUN.
])

# this extension is NOT available with Enterprise COBOL (also not by default for MF)
AT_CHECK([$COMPILE_ONLY -std=cobol85 prog1.cob], [1], [],
[prog1.cob:8: error: 'CURRENT-DATE' is not defined
prog1.cob:9: error: 'TIME-OF-DAY' is not defined
])
AT_CHECK([$COMPILE_ONLY -std=ibm-strict prog1.cob], [1], [],
[prog1.cob:8: error: 'CURRENT-DATE' is not defined
prog1.cob:9: error: 'TIME-OF-DAY' is not defined
])
AT_CHECK([$COMPILE_ONLY -std=mf prog1.cob], [1], [],
[prog1.cob:8: error: 'CURRENT-DATE' is not defined
prog1.cob:9: error: 'TIME-OF-DAY' is not defined
])

AT_CHECK([$COMPILE_ONLY prog1.cob prog2.cob], [1], [],
[prog1.cob:8: error: 'CURRENT-DATE' is not defined
prog1.cob:9: error: 'TIME-OF-DAY' is not defined
])
AT_CHECK([$COMPILE_ONLY -fregister=current-date,time-of-day \
  prog1.cob prog2.cob prog3.cob], [1], [],
[prog2.cob:6: warning: redefinition of 'CURRENT-DATE'
prog2.cob:8: error: 'CURRENT-DATE' is ambiguous; needs qualification
prog2.cob:8: note: 'CURRENT-DATE' is a special register
prog2.cob:6: note: 'CURRENT-DATE' defined here
prog3.cob:5: error: invalid MOVE statement
])

AT_CLEANUP


AT_SETUP([Invalid ENVIRONMENT DIVISION order])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           CONSOLE IS CRT
           .
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA
           .
       SOURCE-COMPUTER. a-computer.
])

AT_CHECK([$COMPILE_ONLY -fincorrect-conf-sec-order=error prog.cob], [1], [],
[prog.cob:10: error: duplicate SPECIAL-NAMES
prog.cob:13: error: SOURCE-COMPUTER incorrectly after SPECIAL-NAMES used
])
AT_CLEANUP


AT_SETUP([Function without END FUNCTION])
AT_KEYWORDS([definition functions])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       FUNCTION-ID. func.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:4: error: syntax error, unexpected end of file, expecting END FUNCTION
])
AT_CLEANUP


AT_SETUP([Nested programs without END PROGRAM])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       PROCEDURE DIVISION.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog-2.
       PROCEDURE DIVISION.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog-3.

       END PROGRAM prog.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CLEANUP


AT_SETUP([Nested programs not in procedure division])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog-2.

       END PROGRAM prog.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:5: error: PROCEDURE DIVISION header missing
])
AT_CLEANUP


AT_SETUP([Screen section starts with 78-level])
AT_KEYWORDS([screen definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       DATA DIVISION.
       SCREEN SECTION.
       78 const VALUE "x".
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CLEANUP


AT_SETUP([Invalid PICTURE strings])
AT_KEYWORDS([definition USAGE])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  empty-pic PIC.
       01  too-long-pic PIC XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.
       01  too-long-pic2 PIC XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.
       01  multiple-symbols.
           03  PIC 9CRCR.
           03  PIC 9DBDB.
           03  PIC SS99S.
           03  PIC 99..9.
           03  PIC 99VV9.
           03  PIC +$99+.
           03  PIC $+99$-.
       01  non-symbols.
           03  PIC 9K.
           03  PIC 999C.
           03  PIC 999D.
       01  too-many-digits PIC 9(50).
       01  too-long-number-in-parens PIC 9(11111111111111).
       01  nested-parens PIC 9((100)).
       01  unbalanced-parens PIC 9(.
       01  multiple-pairs-of-parens PIC 9(5)(3).
       01  no-digit-in-parens PIC 9().
       01  mutually-exclusive-symbols.
           03  PIC P(3)9.9.
           03  PIC 9V.9.
           03  PIC Z*.
           03  PIC +(5)--.
           03  PIC $(4)Z(9).
           03  PIC $$B*(4).
           03  PIC NX.
           03  PIC AN.
           03  PIC AZ(3).
           03  PIC 99.99XXXXX.
           03  PIC SA.
           03  PIC $$$B+++B---.
           03  PIC +++9+.
           03  PIC +9(5)CR.
           03  PIC -9(5)DB.
       01 non-rightmost-leftmost-symbols.
           03  PIC BBB+BB99.
           03  PIC 99-B.
           03  PIC 9CRB.
           03  PIC DB9(5).
           03  PIC 99$$$.
           03  PIC 99$B.
           03  PIC 0$99.
           03  PIC PPPVP9.
       01  missing-symbols.
           03  PIC B(5).
           03  PIC +.
           03  PIC $.

       01  str-constant CONSTANT "hello".
       01  float-constant CONSTANT 1.0.
       01  signed-constant CONSTANT -1.
       01  invalid-constant.
           03  PIC X(str-constant).
           03  PIC X(float-constant).
           03  PIC X(signed-constant).
           03  PIC X(unseen-constant).

       01  integer-constant CONSTANT 5.
       01  valid-pics.
           03  PIC VP9B.
           03  PIC B9P(3).
           03  PIC B$$$.
           03  PIC 0000+B0+++0B,+.
           03  PIC +(5)P(3).
           03  PIC ++.++.
           03  PIC $(integer-constant).
           03  PIC $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      -(integer-constant).   *> CHECKME: should this be really valid?


       01  PC-COLOR-BACKGROUND-TABLE.
           05  BIT-BACKGROUND-BLACK      PIC 1(8) BIT VALUE B"00000000".
           05  BIT-BACKGROUND-BLUE       PIC 1(8) BIT VALUE B"00010000".
           05  BIT-BACKGROUND-GREEN      PIC 1(8) BIT VALUE B"00100000".
           05  BIT-BACKGROUND-CYAN       PIC 1(8) BIT VALUE B"00110000".
           05  BIT-BACKGROUND-RED        PIC 1(8) BIT VALUE B"01000000".
           05  BIT-BACKGROUND-MAGENTA    PIC 1(8) BIT VALUE B"01010000".
           05  BIT-BACKGROUND-BROWN      PIC 1(8) BIT VALUE B"01100000".
           05  BIT-BACKGROUND-LIGHT-GRAY PIC 1(8) BIT VALUE B"01110000".
       01  FILLER REDEFINES PC-COLOR-BACKGROUND-TABLE.
           05  COLOR-BACKGROUND
               OCCURS 8 TIMES            PIC 1(8) BIT.
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob:9: warning: continuation of COBOL words is archaic in COBOL 2014
prog.cob:11: warning: continuation of COBOL words is archaic in COBOL 2014
prog.cob:12: warning: continuation of COBOL words is archaic in COBOL 2014
prog.cob:13: warning: continuation of COBOL words is archaic in COBOL 2014
prog.cob:14: warning: continuation of COBOL words is archaic in COBOL 2014
prog.cob:82: warning: continuation of COBOL words is archaic in COBOL 2014
prog.cob:7: error: missing PICTURE string
prog.cob:8: error: PICTURE string may not contain more than 63 characters; contains 76 characters
prog.cob:10: error: PICTURE string may not contain more than 63 characters; contains 301 characters
prog.cob:16: error: CR or DB may only occur once in a PICTURE string
prog.cob:17: error: CR or DB may only occur once in a PICTURE string
prog.cob:18: error: S may only occur once in a PICTURE string
prog.cob:18: error: S must be at start of PICTURE string
prog.cob:19: error: . may only occur once in a PICTURE string
prog.cob:20: error: V may only occur once in a PICTURE string
prog.cob:21: error: a trailing +/- sign cannot follow a leading +/- sign
prog.cob:22: error: a leading +/- sign cannot follow a leading currency symbol
prog.cob:22: error: a trailing currency symbol cannot follow a leading currency symbol
prog.cob:22: error: a trailing +/- sign cannot follow a leading +/- sign
prog.cob:24: error: invalid PICTURE character 'K'
prog.cob:25: error: C must be followed by R
prog.cob:26: error: D must be followed by B
prog.cob:27: error: numeric field cannot be larger than 38 digits
prog.cob:28: error: only up to 10 significant digits are permitted within parentheses
prog.cob:29: error: parentheses must be preceded by a picture symbol
prog.cob:30: error: unbalanced parentheses
prog.cob:31: error: parentheses must be preceded by a picture symbol
prog.cob:32: error: parentheses must contain an unsigned integer
prog.cob:34: error: . cannot follow a P which is after the decimal point
prog.cob:35: error: . cannot follow V
prog.cob:36: error: cannot have both Z and * in PICTURE string
prog.cob:37: error: a trailing +/- sign cannot follow a floating +/- string which is before the decimal point
prog.cob:37: error: a trailing +/- sign may only occur once in a PICTURE string
prog.cob:38: error: a Z or * which is before the decimal point cannot follow a floating currency symbol string which is before the decimal point
prog.cob:39: error: a Z or * which is before the decimal point cannot follow a floating currency symbol string which is before the decimal point
prog.cob:40: warning: handling of USAGE NATIONAL is unfinished; implementation is likely to be changed
prog.cob:40: error: A or X cannot follow N
prog.cob:41: warning: handling of USAGE NATIONAL is unfinished; implementation is likely to be changed
prog.cob:41: error: N cannot follow A or X
prog.cob:42: error: a Z or * which is before the decimal point cannot follow A or X
prog.cob:43: error: A or X cannot follow .
prog.cob:44: error: A or X cannot follow S
prog.cob:45: error: a leading +/- sign cannot follow B, 0 or /
prog.cob:45: error: a leading +/- sign cannot follow a floating currency symbol string which is before the decimal point
prog.cob:45: error: a leading +/- sign may only occur once in a PICTURE string
prog.cob:45: error: a trailing +/- sign cannot follow a leading +/- sign
prog.cob:45: error: a trailing +/- sign may only occur once in a PICTURE string
prog.cob:46: error: a trailing +/- sign cannot follow a floating +/- string which is before the decimal point
prog.cob:47: error: CR or DB cannot follow a leading +/- sign
prog.cob:48: error: CR or DB cannot follow a leading +/- sign
prog.cob:50: error: a leading +/- sign cannot follow B, 0 or /
prog.cob:51: error: a leading +/- sign cannot follow 9
prog.cob:52: error: B, 0 or / cannot follow CR or DB
prog.cob:53: error: 9 cannot follow CR or DB
prog.cob:54: error: a floating currency symbol string which is before the decimal point cannot follow 9
prog.cob:55: error: a leading currency symbol cannot follow 9
prog.cob:56: error: a leading currency symbol cannot follow B, 0 or /
prog.cob:57: error: P must be at start or end of PICTURE string
prog.cob:57: error: V cannot follow a P which is after the decimal point
prog.cob:59: error: PICTURE string must contain at least one of the set A, N, X, Z, 1, 9 and *; or at least two of the set +, - and the currency symbol
prog.cob:60: error: PICTURE string must contain at least one of the set A, N, X, Z, 1, 9 and *; or at least two of the set +, - and the currency symbol
prog.cob:61: error: PICTURE string must contain at least one of the set A, N, X, Z, 1, 9 and *; or at least two of the set +, - and the currency symbol
prog.cob:67: error: 'STR-CONSTANT' is not a numeric literal
prog.cob:68: error: 'FLOAT-CONSTANT' is not an integer
prog.cob:69: error: 'SIGNED-CONSTANT' is not unsigned
prog.cob:70: error: 'UNSEEN-CONSTANT' is not defined
prog.cob:81: warning: uncommon parentheses
prog.cob:86: warning: USAGE BIT is not implemented
prog.cob:87: warning: USAGE BIT is not implemented
prog.cob:88: warning: USAGE BIT is not implemented
prog.cob:89: warning: USAGE BIT is not implemented
prog.cob:90: warning: USAGE BIT is not implemented
prog.cob:91: warning: USAGE BIT is not implemented
prog.cob:92: warning: USAGE BIT is not implemented
prog.cob:93: warning: USAGE BIT is not implemented
prog.cob:96: warning: USAGE BIT is not implemented
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:9: warning: continuation of COBOL words used
prog.cob:11: warning: continuation of COBOL words used
prog.cob:12: warning: continuation of COBOL words used
prog.cob:13: warning: continuation of COBOL words used
prog.cob:14: warning: continuation of COBOL words used
prog.cob:82: warning: continuation of COBOL words used
prog.cob:7: error: missing PICTURE string
prog.cob:10: error: PICTURE string may not contain more than 255 characters; contains 301 characters
prog.cob:16: error: CR or DB may only occur once in a PICTURE string
prog.cob:17: error: CR or DB may only occur once in a PICTURE string
prog.cob:18: error: S may only occur once in a PICTURE string
prog.cob:18: error: S must be at start of PICTURE string
prog.cob:19: error: . may only occur once in a PICTURE string
prog.cob:20: error: V may only occur once in a PICTURE string
prog.cob:21: error: a trailing +/- sign cannot follow a leading +/- sign
prog.cob:22: error: a leading +/- sign cannot follow a leading currency symbol
prog.cob:22: error: a trailing currency symbol cannot follow a leading currency symbol
prog.cob:22: error: a trailing +/- sign cannot follow a leading +/- sign
prog.cob:24: error: invalid PICTURE character 'K'
prog.cob:25: error: C must be followed by R
prog.cob:26: error: D must be followed by B
prog.cob:27: error: numeric field cannot be larger than 38 digits
prog.cob:28: error: only up to 10 significant digits are permitted within parentheses
prog.cob:29: error: parentheses must be preceded by a picture symbol
prog.cob:30: error: unbalanced parentheses
prog.cob:31: error: parentheses must be preceded by a picture symbol
prog.cob:32: error: parentheses must contain an unsigned integer
prog.cob:34: error: . cannot follow a P which is after the decimal point
prog.cob:35: error: . cannot follow V
prog.cob:36: error: cannot have both Z and * in PICTURE string
prog.cob:37: error: a trailing +/- sign cannot follow a floating +/- string which is before the decimal point
prog.cob:37: error: a trailing +/- sign may only occur once in a PICTURE string
prog.cob:38: error: a Z or * which is before the decimal point cannot follow a floating currency symbol string which is before the decimal point
prog.cob:39: error: a Z or * which is before the decimal point cannot follow a floating currency symbol string which is before the decimal point
prog.cob:40: warning: handling of USAGE NATIONAL is unfinished; implementation is likely to be changed
prog.cob:40: error: A or X cannot follow N
prog.cob:41: warning: handling of USAGE NATIONAL is unfinished; implementation is likely to be changed
prog.cob:41: error: N cannot follow A or X
prog.cob:42: error: a Z or * which is before the decimal point cannot follow A or X
prog.cob:43: error: A or X cannot follow .
prog.cob:44: error: A or X cannot follow S
prog.cob:45: error: a leading +/- sign cannot follow B, 0 or /
prog.cob:45: error: a leading +/- sign cannot follow a floating currency symbol string which is before the decimal point
prog.cob:45: error: a leading +/- sign may only occur once in a PICTURE string
prog.cob:45: error: a trailing +/- sign cannot follow a leading +/- sign
prog.cob:45: error: a trailing +/- sign may only occur once in a PICTURE string
prog.cob:46: error: a trailing +/- sign cannot follow a floating +/- string which is before the decimal point
prog.cob:47: error: CR or DB cannot follow a leading +/- sign
prog.cob:48: error: CR or DB cannot follow a leading +/- sign
prog.cob:50: error: a leading +/- sign cannot follow B, 0 or /
prog.cob:51: error: a leading +/- sign cannot follow 9
prog.cob:52: error: B, 0 or / cannot follow CR or DB
prog.cob:53: error: 9 cannot follow CR or DB
prog.cob:54: error: a floating currency symbol string which is before the decimal point cannot follow 9
prog.cob:55: error: a leading currency symbol cannot follow 9
prog.cob:56: error: a leading currency symbol cannot follow B, 0 or /
prog.cob:57: error: P must be at start or end of PICTURE string
prog.cob:57: error: V cannot follow a P which is after the decimal point
prog.cob:59: error: PICTURE string must contain at least one of the set A, N, X, Z, 1, 9 and *; or at least two of the set +, - and the currency symbol
prog.cob:60: error: PICTURE string must contain at least one of the set A, N, X, Z, 1, 9 and *; or at least two of the set +, - and the currency symbol
prog.cob:61: error: PICTURE string must contain at least one of the set A, N, X, Z, 1, 9 and *; or at least two of the set +, - and the currency symbol
prog.cob:67: error: 'STR-CONSTANT' is not a numeric literal
prog.cob:68: error: 'FLOAT-CONSTANT' is not an integer
prog.cob:69: error: 'SIGNED-CONSTANT' is not unsigned
prog.cob:70: error: 'UNSEEN-CONSTANT' is not defined
prog.cob:81: warning: uncommon parentheses
prog.cob:86: warning: USAGE BIT is not implemented
prog.cob:87: warning: USAGE BIT is not implemented
prog.cob:88: warning: USAGE BIT is not implemented
prog.cob:89: warning: USAGE BIT is not implemented
prog.cob:90: warning: USAGE BIT is not implemented
prog.cob:91: warning: USAGE BIT is not implemented
prog.cob:92: warning: USAGE BIT is not implemented
prog.cob:93: warning: USAGE BIT is not implemented
prog.cob:96: warning: USAGE BIT is not implemented
])
AT_CLEANUP


AT_SETUP([PICTURE string with control character])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       PIC(P)
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:2: error: 'P' is not defined
prog.cob:2: error: invalid PICTURE character ''
prog.cob:2: error: PICTURE string must contain at least one of the set A, N, X, Z, 1, 9 and *; or at least two of the set +, - and the currency symbol
prog.cob:2: error: PROGRAM-ID header missing
prog.cob:2: error: PROCEDURE DIVISION header missing
prog.cob:2: error: syntax error, unexpected PICTURE
])
AT_CLEANUP


AT_SETUP([PICTURE strings invalid with BLANK WHEN ZERO])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  x PIC S9(5) BLANK ZERO.
       01  y PIC *(5) BLANK ZERO.

       *> Actually valid
       01  z PIC -9(5) BLANK ZERO.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: 'x' cannot have S in PICTURE string and BLANK WHEN ZERO
prog.cob:8: error: 'y' cannot have * in PICTURE string and BLANK WHEN ZERO
])
AT_CLEANUP


AT_SETUP([PICTURE strings invalid with USAGE])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  x PIC XXX, COMP-6.
       01  y PIC +999, PACKED-DECIMAL.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: PICTURE clause not compatible with USAGE COMP-6
prog.cob:8: error: PICTURE clause not compatible with USAGE COMP-3
])
AT_CLEANUP


AT_SETUP([ALPHABET definition])
AT_KEYWORDS([definition])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           ALPHABET TESTME IS
                    'A' THROUGH 'Z', x'00' thru x'05';
                    x'41' ALSO x'42', ALSO x'00', x'C1' ALSO x'C2'.
           ALPHABET FINE
                    'A' also 'B' also 'C' also 'd' also 'e' ALSO 'f',
                    'g' also 'G', '1' thru '9', x'00'.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:7: error: duplicate character values in alphabet 'TESTME': x'00', A, B
])
AT_CLEANUP


AT_SETUP([PROGRAM COLLATING SEQUENCE])
AT_KEYWORDS([definition ALPHABET])

# check that a reference on the bad alphabet does not break cobc
AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        PROGRAM COLLATING SEQUENCE IS TESTME.
       SPECIAL-NAMES.
           ALPHABET TESTME IS
                    x'00' thru x'05', 'A' THROUGH 'Z';
                    x'41' ALSO x'42', ALSO x'00', x'C1' ALSO x'C2'.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog2.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        PROGRAM COLLATING SEQUENCE IS TESTNO.
])

AT_DATA([prog3.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        PROGRAM COLLATING SEQUENCE IS ALPHABET-1,
                                                      ALPHABET-2.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS
                    'A' THROUGH 'Z', x'00' thru x'05'.
           ALPHABET ALPHABET-2
                    n'A' also n'B' ALSO n'f',
                    n'g' also n'G', n'1' thru n'9'.
       END PROGRAM prog3.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3b.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        PROGRAM           SEQUENCE IS ALPHABET-1,
                                                      ALPHABET-2.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS
                    'A' THROUGH 'Z', x'00' thru x'05'.
           ALPHABET ALPHABET-2 IS
                    n'A' ALSO n'f',
                    n'g' also n'G'.
       END PROGRAM prog3b.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3c.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE, SEQUENCE ALPHABET-1, ALPHABET-2.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1    x'00' thru x'05'.
           ALPHABET ALPHABET-2 IS n'g' also n'G', n'1' thru n'9'.
       END PROGRAM prog3c.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3d.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE, SEQUENCE ALPHABET-1, ALPHABET-2.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS 'A' THROUGH 'Z'.
           ALPHABET ALPHABET-2   n'A' also n'B', n'1' thru n'9'.
       END PROGRAM prog3d.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3e.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE, SEQUENCE ALPHABET-1.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS 'Z', x'00'.
       END PROGRAM prog3e.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3f.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        COLLATING SEQUENCE
                          FOR ALPHANUMERIC IS ALPHABET-1.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS
                    'A' THROUGH 'Z', x'00', x'05'.
       END PROGRAM prog3f.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3g.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        SEQUENCE ALPHANUMERIC ALPHABET-1.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS
                    'A' THROUGH 'D'.
       END PROGRAM prog3g.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3h.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        COLLATING SEQUENCE
                          FOR ALPHANUMERIC IS ALPHABET-1
                              NATIONAL     IS ALPHABET-2.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS
                    'A', 'C', x'05'.
           ALPHABET ALPHABET-2
                    n'A', n'1' thru n'9'.
       END PROGRAM prog3h.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3i.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        COLLATING SEQUENCE
                          NATIONAL     ALPHABET-2
                          ALPHANUMERIC ALPHABET-1.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-1 IS
                    'a' THROUGH 'z'.
           ALPHABET ALPHABET-2
                    n'B', n'C'; n'g' also n'G'.
       END PROGRAM prog3i.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog3j.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. GNU-LINUX.
       OBJECT-COMPUTER. GC-MACHINE,
                        COLLATING SEQUENCE
                          NATIONAL     ALPHABET-2.
       SPECIAL-NAMES.
           ALPHABET ALPHABET-2
                    n'B', n'C'; n'g' also n'G'.
       END PROGRAM prog3j.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:10: error: duplicate character values in alphabet 'TESTME': x'00', A, B
])
AT_CHECK([$COMPILE_ONLY prog2.cob], [1], [],
[prog2.cob:8: error: 'TESTNO' is not defined
prog2.cob:8: error: 'TESTNO' is not an alphabet name
])
AT_CHECK([$COMPILE_ONLY -Wno-unfinished prog3.cob], [0], [],
[prog3.cob:9: warning: NATIONAL COLLATING SEQUENCE is not implemented
prog3.cob:25: warning: NATIONAL COLLATING SEQUENCE is not implemented
prog3.cob:39: warning: NATIONAL COLLATING SEQUENCE is not implemented
prog3.cob:50: warning: NATIONAL COLLATING SEQUENCE is not implemented
prog3.cob:99: warning: NATIONAL COLLATING SEQUENCE is not implemented
prog3.cob:114: warning: NATIONAL COLLATING SEQUENCE is not implemented
prog3.cob:130: warning: NATIONAL COLLATING SEQUENCE is not implemented
])
AT_CLEANUP


AT_SETUP([RENAMES item])
AT_KEYWORDS([definition 66])

AT_DATA([prog.cob], [
       IDENTIFICATION  DIVISION.
       PROGRAM-ID.     prog.
       DATA            DIVISION.
       WORKING-STORAGE SECTION.
       01  a.
           03  b       PIC 9.
           03  c.
               05 d    PIC 9.
               05 e    PIC 9.

       66  valid-1     RENAMES b.
       66  valid-2     RENAMES d THRU e.

       66  invalid-1   RENAMES a.
       66  invalid-2   RENAMES c THRU d.
       66  invalid-3   RENAMES e THRU d.
       66  invalid-4   RENAMES valid-2.

       01  f.
           03  g       PIC X.
               88  h   VALUE "a".
           03  i       PIC X.
           03  j       OCCURS 5 TIMES.
               05  k   PIC X.
               05  l   PIC X.
           03  m       PIC 9.
           03  n       POINTER, SYNC.
           03  o.
               05  p   PIC X OCCURS 1 TO 10 DEPENDING ON l.

       66  valid-3     RENAMES g THRU i.
       66  invalid-5   RENAMES h.
       66  invalid-6   RENAMES k THRU l.
       66  invalid-7   RENAMES j.
       66  invalid-8   RENAMES m THRU o.
       66  invalid-9   RENAMES b THRU m.
       
       78  my-ext-const VALUE "123".
       66  invalid-ec   RENAMES my-ext-const.
       
       01  my-std-const CONSTANT AS "123".
       66  invalid-sc   RENAMES my-std-const.

       PROCEDURE       DIVISION.
           DISPLAY valid-2 OF a
           IF valid-1 = 1
              CONTINUE
           END-IF
           .
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob:15: error: RENAMES of 01-, 66- and 77-level items does not conform to COBOL 2014
prog.cob:16: error: THRU item 'd' may not be subordinate to 'c'
prog.cob:17: error: THRU item 'd' may not come before 'e'
prog.cob:18: error: RENAMES of 01-, 66- and 77-level items does not conform to COBOL 2014
prog.cob:33: error: RENAMES may not reference a level 88
prog.cob:34: error: cannot use RENAMES on part of the table 'j'
prog.cob:35: error: RENAMES cannot start/end at the OCCURS item 'j'
prog.cob:36: error: RENAMES may not contain 'n' as it is a pointer or object reference
prog.cob:36: error: RENAMES may not contain 'p' as it is an OCCURS DEPENDING table
prog.cob:37: error: 'invalid-9' must immediately follow the record 'a'
prog.cob:37: error: 'b' and 'm' must be in the same record
prog.cob:39: error: 78 VALUE does not conform to COBOL 2014
prog.cob:40: error: a constant may not be used here - 'my-ext-const'
prog.cob:43: error: a constant may not be used here - 'my-std-const'
])
AT_CLEANUP


AT_SETUP([RENAMES of 01-, 66- and 77-level items])
AT_KEYWORDS([definition 66 extensions])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  a PIC X.
       66  renames-a RENAMES a.
       66  renames-a2 RENAMES renames-a.

       77  b PIC X.
       66  renames-b RENAMES b.
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob:7: error: RENAMES of 01-, 66- and 77-level items does not conform to COBOL 2014
prog.cob:8: error: RENAMES of 01-, 66- and 77-level items does not conform to COBOL 2014
prog.cob:11: error: RENAMES of 01-, 66- and 77-level items does not conform to COBOL 2014
])
AT_CHECK([$COMPILE_ONLY -frenames-uncommon-levels=ok prog.cob], [0], [], [])

AT_CLEANUP


AT_SETUP([SAME AS clause])
AT_KEYWORDS([definition EXTERNAL GLOBAL])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  MESSAGE-TEXT-2 EXTERNAL.
         02 AUSGABE-FILE-NAME     PIC X(50).
         02 FILLER REDEFINES AUSGABE-FILE-NAME.
             05 FILLER PIC 9999.
         02 AUSGABE-FILE-NAME-2.
             05 FILLER PIC 9999.
             05 DETAIL-NO PIC 9999.
         02 FILLER SAME AS AUSGABE-FILE-NAME.
      
       77 OUTPUT-NAME SAME AS DETAIL-NO GLOBAL.

       01 Z-MESSAGE-T2 SAME AS AUSGABE-FILE-NAME-2.
       01 Z-MESSAGE-T3.
          49 MT3       SAME AS MESSAGE-TEXT-2.
          49 MT3-REN  REDEFINES MT3 SAME AS MESSAGE-TEXT-2.

       PROCEDURE DIVISION.
           DISPLAY AUSGABE-FILE-NAME OF MESSAGE-TEXT-2
           DISPLAY DETAIL-NO         OF Z-MESSAGE-T2
           DISPLAY AUSGABE-FILE-NAME OF MT3
           DISPLAY OUTPUT-NAME
           GOBACK.
])

AT_DATA([badprog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  MESSAGE-TEXT-2.
         02 AUSGABE-FILE-NAME     PIC X(50).
         02 F1 SAME AS MESSAGE-TEXT-2.
       01 MT2 SAME AS MESSAGE-TEXT-2.
             05 FILLER PIC 9999.
       01 MT3 SAME AS MESSAGE-TEXT-2 PIC X.
       77 OUTPUT-NAME  SAME AS MESSAGE-TEXT-2.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY -std=mf-strict prog.cob], [1], [],
[prog.cob:13: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:15: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:17: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:19: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:20: error: SAME AS clause does not conform to Micro Focus COBOL
])
AT_CHECK([$COMPILE_ONLY badprog.cob], [1], [],
[badprog.cob:8: error: item may not reference itself
badprog.cob:10: error: entry following SAME AS may not be subordinate to it
badprog.cob:11: error: illegal combination of SAME AS with other clauses
badprog.cob:12: error: elementary item expected
])

AT_CLEANUP


AT_SETUP([TYPEDEF clause])
AT_KEYWORDS([definition EXTERNAL GLOBAL TYPE USAGE listing symbols])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 AUSGABE-FILE-NAME-T          PIC X(50) IS TYPEDEF.
       01 SOME-VERY-LONG-TYPEDEF-NAME  PIC 9999  IS TYPEDEF.
       01 AUSGABE-FILE-NAME-2T         IS TYPEDEF.
          05 FILLER    PIC 9999.
          05 DETAIL-NO USAGE SOME-VERY-LONG-TYPEDEF-NAME.
      *
       01  MESSAGE-TEXT-2T IS TYPEDEF.
         02 AUSGABE-FILE-NAME     USAGE AUSGABE-FILE-NAME-T.
         02 FILLER REDEFINES AUSGABE-FILE-NAME.
             05 FILLER PIC 9999.
         02 AUSGABE-FILE-NAME-2   USAGE AUSGABE-FILE-NAME-2T.
         02 FILLER                USAGE AUSGABE-FILE-NAME-T.
      *
       01  MESSAGE-TEXT-2 EXTERNAL USAGE MESSAGE-TEXT-2T.
      
       77 OUTPUT-NAME USAGE SOME-VERY-LONG-TYPEDEF-NAME GLOBAL.

       01 Z-MESSAGE-T2 USAGE AUSGABE-FILE-NAME-2T.
       01 Z-MESSAGE-T3.
          49 MT3                    USAGE MESSAGE-TEXT-2T.
          49 MT3-REN  REDEFINES MT3 USAGE MESSAGE-TEXT-2T.

       77 CALCULUS             PIC S9(15)V9(03) IS TYPEDEF.
       01 USER-TYPE            IS TYPEDEF.
          02 AMOUNT            USAGE CALCULUS.
          02 FILLER            OCCURS 100.
             05 GRP-AMOUNT     USAGE CALCULUS.
       01 USER-VAR             USAGE USER-TYPE.

       PROCEDURE DIVISION.
           DISPLAY AUSGABE-FILE-NAME OF MESSAGE-TEXT-2
           DISPLAY DETAIL-NO         OF Z-MESSAGE-T2
           DISPLAY AUSGABE-FILE-NAME OF MT3
           DISPLAY OUTPUT-NAME
           MOVE -123.45 TO AMOUNT
           MOVE AMOUNT  TO GRP-AMOUNT (1)
           GOBACK.
])

AT_DATA([progstd.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 AUSGABE-FILE-NAME-T     PIC X(50) IS TYPEDEF.
       01 DETAIL-NO-T             PIC 9999  IS TYPEDEF.
       01 AUSGABE-FILE-NAME-2T              IS TYPEDEF.
          05 FILLER    PIC 9999.
          05 DETAIL-NO TYPE TO DETAIL-NO-T.
      *
       01  MESSAGE-TEXT-2T IS TYPEDEF.
         02 AUSGABE-FILE-NAME     TYPE AUSGABE-FILE-NAME-T.
         02 FILLER REDEFINES AUSGABE-FILE-NAME.
             05 FILLER PIC 9999.
         02 AUSGABE-FILE-NAME-2   TYPE AUSGABE-FILE-NAME-2T.
         02 FILLER                TYPE AUSGABE-FILE-NAME-T.
      *
       01  MESSAGE-TEXT-2 EXTERNAL TYPE MESSAGE-TEXT-2T.
      
       77 OUTPUT-NAME TYPE TO DETAIL-NO-T GLOBAL.

       01 Z-MESSAGE-T2 TYPE AUSGABE-FILE-NAME-2T.
       01 Z-MESSAGE-T3.
          49 MT3                    TYPE MESSAGE-TEXT-2T.
          49 MT3-REN  REDEFINES MT3 TYPE MESSAGE-TEXT-2T.

       77 CALCULUS             PIC S9(15)V9(03) IS TYPEDEF.

       01 SOME-STRUCT          IS TYPEDEF.
          02 SOME-DATA         PIC 9.
          02 SOME-VALUES       OCCURS 3.
             03 OTHER-DATA     PIC X.
             03 OTHER-VALUES   OCCURS 2 PIC 9.
       77 SOME2-DATA           PIC 9.      *> temporary variant until solved...
       01 SOME-STRUCT2         IS TYPEDEF.
      *>  02 SOME2-DATA        PIC 9.      TODO!
          02 SOME2-VALUES      OCCURS 1 TO 6 DEPENDING ON SOME2-DATA
                               DESCENDING KEY SB SA
                               INDEXED BY SOME2-INDEX.
             05 SA             PIC X VALUE x'12'.
             05 SB             PIC 9 VALUE 0.
             05 SDATA          PIC X(12).

       01 MY-TEST.
          02 AMOUNT            TYPE CALCULUS.
          02 FILLER            OCCURS 100.
             05 GRP-AMOUNT     TYPE CALCULUS.
          02 MY-NAME           TYPE SOME-STRUCT  OCCURS 5.
          02 MY-NAME2          TYPE SOME-STRUCT2.
       01 MY-TEST2             TYPE SOME-STRUCT2.
       LINKAGE SECTION.
       01 MY-STORE             TYPE CALCULUS.

       PROCEDURE DIVISION USING MY-STORE.
           DISPLAY AUSGABE-FILE-NAME OF MESSAGE-TEXT-2
           DISPLAY DETAIL-NO         OF Z-MESSAGE-T2
           DISPLAY AUSGABE-FILE-NAME OF MT3
           DISPLAY OUTPUT-NAME
           SET ADDRESS OF MY-STORE TO NULL
           INITIALIZE MY-NAME(2) GRP-AMOUNT (99)
           INITIALIZE OTHER-VALUES (2, 3, 2)
           SEARCH ALL SOME2-VALUES OF MY-NAME2
      *>     WHEN SA(SOME2-INDEX) = x'12'  CHECKME: Should work
             WHEN SA OF MY-NAME2(SOME2-INDEX OF MY-NAME2) = x'12'
                CONTINUE.
           GOBACK.
])

AT_DATA([badprog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  MESSAGE-TEXT-2T IS TYPEDEF.
         02 AUSGABE-FILE-NAME     PIC X(50).
         02 F1      USAGE MESSAGE-TEXT-2T.
       01 MT2 USAGE MESSAGE-TEXT-2T.
             05 FILLER PIC 9999.
       01 MT3 TYPE TO MESSAGE-TEXT-2T PIC X.
       77 OUTPUT-NAME  TYPE TO MESSAGE-TEXT-2T.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY -std=cobol2002 prog.cob], [1], [],
[prog.cob:10: error: USAGE type-name does not conform to COBOL 2002
prog.cob:13: error: USAGE type-name does not conform to COBOL 2002
prog.cob:16: error: USAGE type-name does not conform to COBOL 2002
prog.cob:17: error: USAGE type-name does not conform to COBOL 2002
prog.cob:19: error: USAGE type-name does not conform to COBOL 2002
prog.cob:21: error: USAGE type-name does not conform to COBOL 2002
prog.cob:23: error: USAGE type-name does not conform to COBOL 2002
prog.cob:25: error: USAGE type-name does not conform to COBOL 2002
prog.cob:26: error: USAGE type-name does not conform to COBOL 2002
prog.cob:30: error: USAGE type-name does not conform to COBOL 2002
prog.cob:32: error: USAGE type-name does not conform to COBOL 2002
prog.cob:33: error: USAGE type-name does not conform to COBOL 2002
])
AT_CHECK([$COMPILE_ONLY -std=mf-strict prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY progstd.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY -std=cobol2002 progstd.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY -std=mf-strict progstd.cob], [1], [],
[progstd.cob:10: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:13: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:16: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:17: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:19: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:21: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:23: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:25: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:26: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:46: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:48: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:49: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:50: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:51: error: TYPE TO clause does not conform to Micro Focus COBOL
progstd.cob:53: error: TYPE TO clause does not conform to Micro Focus COBOL
])

AT_CHECK([$COMPILE_ONLY badprog.cob], [1], [],
[badprog.cob:8: error: item may not reference itself
badprog.cob:10: error: entry following TYPE TO may not be subordinate to it
badprog.cob:11: error: illegal combination of TYPE TO with other clauses
badprog.cob:12: error: elementary item expected
])

AT_CAPTURE_FILE([symbols.lst])
AT_CHECK([$COMPILE_ONLY -std=mf-strict -t symbols.lst -tsymbols -fno-tsource -fno-tmessages -tlines=0 prog.cob],
[0], [], [])

AT_DATA([prog.lst],
[GnuCOBOL V.R.P               prog.cob                   DDD MMM dd HH:MM:SS YYYY

SIZE  TYPE           LVL  NAME                           PICTURE

      WORKING-STORAGE SECTION

00050 ALPHANUMERIC   01   AUSGABE-FILE-NAME-T            X(50)

00004 NUMERIC        01   SOME-VERY-LONG-TYPEDEF-NAME    9999

00008 GROUP          01   AUSGABE-FILE-NAME-2T
00004 NUMERIC        05   FILLER                         9999
00004 NUMERIC        05   DETAIL-NO                      SOME-VERY-LONG-TYPEDE...

00108 GROUP          01   MESSAGE-TEXT-2T
00050 ALPHANUMERIC   02   AUSGABE-FILE-NAME              AUSGABE-FILE-NAME-T
00004 GROUP          02   FILLER, REDEFINES AUSGABE-FILE-NAME
00004 NUMERIC        05   FILLER                         9999
00008 GROUP          02   AUSGABE-FILE-NAME-2            AUSGABE-FILE-NAME-2T
00050 ALPHANUMERIC   02   FILLER                         AUSGABE-FILE-NAME-T

00108 GROUP          01   MESSAGE-TEXT-2                 MESSAGE-TEXT-2T EXTERNAL

00004 NUMERIC        77   OUTPUT-NAME                    SOME-VERY-LONG-TYPEDE... GLOBAL

00008 GROUP          01   Z-MESSAGE-T2                   AUSGABE-FILE-NAME-2T

00108 GROUP          01   Z-MESSAGE-T3
00108 GROUP          49   MT3                            MESSAGE-TEXT-2T
00108 GROUP          49   MT3-REN                        MESSAGE-TEXT-2T, REDEFINES MT3

00018 NUMERIC        77   CALCULUS                       S9(15)V9(03)

01818 GROUP          01   USER-TYPE
00018 NUMERIC        02   AMOUNT                         CALCULUS
01800 GROUP          02   FILLER                         OCCURS 100
00018 NUMERIC        05   GRP-AMOUNT                     CALCULUS

01818 GROUP          01   USER-VAR                       USER-TYPE


])


AT_CHECK([$UNIFY_LISTING symbols.lst symbols.lis once], [0], [], [])
AT_CHECK([diff prog.lst symbols.lis], [0], [], [])




AT_CLEANUP


AT_SETUP([LIKE clause])
AT_KEYWORDS([definition EXTERNAL GLOBAL])

# work in progress
AT_XFAIL_IF(true)

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  MESSAGE-TEXT-2 EXTERNAL.
         02 AUSGABE-FILE-NAME     PIC X(50).
         02 FILLER REDEFINES AUSGABE-FILE-NAME.
             05 FILLER PIC 9999.
         02 AUSGABE-FILE-NAME-2.
             05 FILLER PIC 9999.
             05 DETAIL-NO PIC 9999.
         02 FILLER LIKE AUSGABE-FILE-NAME.
      
       77 OUTPUT-VAL     LIKE DETAIL-NO GLOBAL.
       77 OUTPUT-VAL-P1  LIKE DETAIL-NO (+1).
       77 OUTPUT-VAL-P1b LIKE DETAIL-NO (1).
       77 OUTPUT-VAL-M2  LIKE DETAIL-NO (-2).

       01 Z-MESSAGE-T2 LIKE AUSGABE-FILE-NAME-2.
       01 Z-MESSAGE-T3.
          49 MT3      LIKE MESSAGE-TEXT-2.

       PROCEDURE DIVISION.
           DISPLAY AUSGABE-FILE-NAME OF MESSAGE-TEXT-2
           DISPLAY Z-MESSAGE-T2 (55:LENGTH OF DETAIL-NO)
           DISPLAY MT3 (1:LENGTH OF AUSGABE-FILE-NAME)
           ADD OUTPUT-VAL TO DETAIL-NO
           GOBACK.
])

# TODO add tests and syntax checks in cobc
# AT_DATA([badprog.cob], [
#        IDENTIFICATION   DIVISION.
#        PROGRAM-ID.      prog.
#        DATA             DIVISION.
#        WORKING-STORAGE  SECTION.
# 
# ])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [], [])
AT_CHECK([$COMPILE_ONLY -std=mf-strict prog.cob], [1], [],
[prog.cob:13: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:15: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:17: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:19: error: SAME AS clause does not conform to Micro Focus COBOL
prog.cob:20: error: SAME AS clause does not conform to Micro Focus COBOL
])

AT_CLEANUP


AT_SETUP([APPLY COMMIT clause])
AT_KEYWORDS([definition I-O-CONTROL ROLLBACK])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.  *> taken from "commit and rollback example"
                          *> from COBOL 202x draft
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT STCK-FILE
              ASSIGN TO "STOCK"
              ORGANIZATION IS INDEXED
              ACCESS MODE IS RANDOM
              FILE STATUS IS STCK-FILE-STATUS
              RECORD KEY  IS APPLY
              SHARING WITH ALL OTHER.

           SELECT CHNG-FILE
              ASSIGN TO "CHANGE"
              ORGANIZATION IS SEQUENTIAL
              ACCESS MODE IS SEQUENTIAL
              FILE STATUS IS CHNG-FILE-STATUS
              SHARING WITH ALL OTHER.

           SELECT SORT-FILE
              ASSIGN TO "SORT".

       I-O-CONTROL.
           APPLY COMMIT ON STCK-FILE CHNG-FILE STCK-FILE not-there
                 SORT-FILE UPDATE-COUNT not-there-again BASED-STUFF
                 RED-DATA SOME-DATA.

       DATA DIVISION.
       FILE SECTION.

       FD  STCK-FILE.
       01  STCK-REC.
           03  APPLY                   PIC X(5).
           03  STCK-QTY                PIC 9(5)V99.

       SD  SORT-FILE.
       01  SORT-REC                    PIC X(100).

       FD  CHNG-FILE.
       01  CHNG-REC.
           03  CHNG-KEY                PIC X(5).
           03  CHNG-QTY                PIC 9(5)V99.
           03  CHNG-ACTION             PIC X.
           03  CHNG-STATE              PIC X.

       WORKING-STORAGE SECTION.

       01  FILE-STATES.
           03  STCK-FILE-STATUS        PIC XX.
               88  STCK-FILE-OK                  VALUE "00".
           03  CHNG-FILE-STATUS        PIC XX.
               88  CHNG-FILE-OK                  VALUE "00".
       77  UPDATE-COUNT  BINARY-LONG.
       77  BASED-STUFF   PIC X BASED.
       01  DATA-HERE.
           03 SOME-DATA  PIC 9.
       01  RED-DATA REDEFINES DATA-HERE PIC X.

       PROCEDURE DIVISION.

         MAIN SECTION.

           PERFORM INITIALISATION
           PERFORM TERMINATION
           STOP RUN WITH NORMAL STATUS 0

       . INITIALISATION SECTION.

           OPEN I-O CHNG-FILE, STCK-FILE
           IF NOT STCK-FILE-OK OR NOT CHNG-FILE-OK
              PERFORM FATAL-ERROR
           END-IF

       . TERMINATION SECTION.

           COMMIT
           IF NOT STCK-FILE-OK OR NOT CHNG-FILE-OK
              PERFORM FATAL-ERROR
           END-IF

       . FATAL-ERROR SECTION.

           ROLLBACK
           STOP RUN WITH ERROR STATUS 16.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:29: warning: APPLY COMMIT is not implemented
prog.cob:27: error: 'not-there' is not defined
prog.cob:28: error: 'not-there-again' is not defined
prog.cob:27: error: duplicate APPLY COMMIT target: 'STCK-FILE'
prog.cob:28: error: APPLY COMMIT statement invalid for SORT file
prog.cob:29: error: 'RED-DATA' REDEFINES field not allowed here
prog.cob:29: error: 'SOME-DATA' not level 01 or 77
])

AT_CLEANUP


AT_SETUP([GLOBAL record-names])
AT_KEYWORDS([definition ALTERNATE INDEXED])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. OUTER-PROGRAM.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT STCK-FILE
              ASSIGN TO "STOCK"
              ORGANIZATION IS INDEXED
              ACCESS MODE IS RANDOM
              FILE STATUS IS STCK-FILE-STATUS
              RECORD People-LastName
              ALTERNATE People-NameKey
                 SOURCE People-FirstName People-LastName
              ALTERNATE People-NameKeyFirst
                 SOURCE People-1stName
              *> validating internal error handling:
              ALTERNATE BadKey People-1stName.
           SELECT LOCAL-FILE
              ASSIGN TO "LOCAL"
              ORGANIZATION IS INDEXED
              ACCESS MODE IS RANDOM
              FILE STATUS IS LOCL-FILE-STATUS
              RECORD LPeople-LastName
              ALTERNATE LPeople-NameKey
                 SOURCE LPeople-FirstName LPeople-LastName.

       DATA DIVISION.
       FILE SECTION.

       FD  STCK-FILE GLOBAL.
       01  STCK-REC.
           02 People-LastName      PIC X(50).
           02 People-FirstName     PIC X(50).
       01  STCK-REC-PART.
           02 People-1stName       PIC X(50).

       FD  LOCAL-FILE.
       01  LOCAL-REC.
           02 LPeople-LastName     PIC X(50).
           02 LPeople-FirstName    PIC X(50).

       WORKING-STORAGE SECTION.

       01  FILE-STATES IS GLOBAL.
           03  STCK-FILE-STATUS        PIC XX.
               88  STCK-FILE-OK        VALUE "00".
           03  LOCL-FILE-STATUS        PIC XX.
               88  LOCL-FILE-OK        VALUE "00".

       PROCEDURE DIVISION.

         MAIN SECTION.

           OPEN OUTPUT LOCAL-FILE
           MOVE "John" TO LPeople-FirstName
           MOVE "Doe"  TO LPeople-LastName
           WRITE LOCAL-REC
           CLOSE LOCAL-FILE

           OPEN OUTPUT STCK-FILE
           MOVE "John" TO People-FirstName
           MOVE "Doe"  TO People-LastName
           WRITE STCK-REC
           CLOSE STCK-FILE
           
           CALL "INNER-PROGRAM".
           GOBACK.

       PROGRAM-ID. INNER-PROGRAM.
       PROCEDURE DIVISION.
           OPEN INPUT STCK-FILE
           MOVE "John" TO People-FirstName
           MOVE "Doe"  TO People-LastName
           READ STCK-FILE KEY People-NameKey
             NOT INVALID KEY
                DISPLAY People-FirstName " " People-LastName
             INVALID KEY
                DISPLAY "NOT FOUND"
           END-READ
           INITIALIZE STCK-REC
           MOVE "John" TO People-1stName
           READ STCK-FILE KEY People-NameKeyFirst
             NOT INVALID KEY
                DISPLAY People-FirstName " " People-LastName
             INVALID KEY
                DISPLAY "NOT FOUND"
           END-READ
           CLOSE STCK-FILE
           OPEN INPUT LOCAL-FILE
           MOVE "John" TO LPeople-FirstName
           MOVE "Doe"  TO LPeople-LastName
           READ LOCAL-FILE KEY LPeople-NameKey
             NOT INVALID KEY
                DISPLAY LPeople-FirstName " " LPeople-LastName
             INVALID KEY
                DISPLAY "NOT FOUND"
           END-READ
           CLOSE LOCAL-FILE
           GOBACK.
       END PROGRAM INNER-PROGRAM.
      *>****************************************************************
       END PROGRAM OUTER-PROGRAM.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:18: error: syntax error, unexpected Identifier, expecting SEQUENTIAL
prog.cob:18: error: 'BadKey' is not defined
prog.cob:91: error: 'LPeople-FirstName' is not defined
prog.cob:92: error: 'LPeople-LastName' is not defined
prog.cob:93: error: 'LPeople-NameKey' is not defined
])

AT_CLEANUP


AT_SETUP([Invalid USE BEFORE])
AT_KEYWORDS([USE])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       PROCEDURE DIVISION.
       DEPTHDRUSE SECTION.
       USE BEFORE REPORTING DEPTHDR.
])

AT_CHECK([$COMPILE_ONLY -std=default prog.cob ], [1], [],
[prog.cob: in section 'DEPTHDRUSE':
prog.cob:6: error: 'DEPTHDR' is not defined
])

AT_CLEANUP

