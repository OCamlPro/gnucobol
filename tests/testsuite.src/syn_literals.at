## Copyright (C) 2007-2012, 2014-2023 Free Software Foundation, Inc.
## Written by Keisuke Nishida, Roger While, Simon Sobisch, Edward Hart,
## Ron Norman
##
## This file is part of GnuCOBOL.
##
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
##
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <https://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

# Syntaxic Tests on literals


AT_SETUP([continuation Indicator - too many lines])
AT_KEYWORDS([misc fixed literals listing])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
           DISPLAY '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    ' ' END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:538: error: buffer overrun - too many continuation lines
])

# extra test with listing as this is an edge case there
AT_CAPTURE_FILE([prog.lst])
AT_CHECK([$COMPILE_ONLY -t prog.lst prog.cob], [1], [],
[prog.cob:538: error: buffer overrun - too many continuation lines
])

AT_CLEANUP



AT_SETUP([literal too long])
AT_KEYWORDS([misc literals literal-length continuation listing])


AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
           DISPLAY '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    '
      -    ' '.
           STOP RUN.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
           DISPLAY '    '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           '                                                                                                                                                                                                                                             '-
           ' ' END-DISPLAY.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:9: error: invalid literal: '                                   ...'
prog.cob:9: error: literal length exceeds 8191 characters
])

AT_CHECK([$COMPILE_ONLY -fliteral-length=160 prog.cob], [1], [],
[prog.cob:9: error: invalid literal: '                                   ...'
prog.cob:9: error: literal length exceeds 160 characters
])

AT_CHECK([$COMPILE_ONLY -free prog2.cob], [1], [],
[prog2.cob:9: error: invalid literal: '                                   ...'
prog2.cob:9: error: literal length 8299 exceeds 8191 characters
])

# extra test with listing as this is an edge case there
AT_CAPTURE_FILE([prog.lst])
AT_CHECK([$COMPILE_ONLY -t prog.lst prog.cob], [1], [],
[prog.cob:9: error: invalid literal: '                                   ...'
prog.cob:9: error: literal length exceeds 8191 characters
])

AT_CAPTURE_FILE([prog2.lst])
AT_CHECK([$COMPILE_ONLY -free -t prog2.lst prog2.cob], [1], [],
[prog2.cob:9: error: invalid literal: '                                   ...'
prog2.cob:9: error: literal length 8299 exceeds 8191 characters
])

AT_CLEANUP



AT_SETUP([Numeric literals])
AT_KEYWORDS([misc numeric-literal-length])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 COUNTER       PIC 9 VALUE 0.
       PROCEDURE        DIVISION.

      *> No literals at all
       00000000000000000000000000000000000000000000000000000000000
       SECTION.
       000000000000000000000000000000000000000000000000000000000000.
           ADD 1 TO COUNTER END-ADD
           EVALUATE COUNTER
           WHEN 1
           PERFORM
           00000000000000000000000000000000000000000000000000000000000
           WHEN 2
           PERFORM
           000000000000000000000000000000000000000000000000000000000000
           WHEN 3
           MOVE 0 TO COUNTER
           END-EVALUATE.

       100000000000000000000000000000000000000000000000000000000001
       SECTION.
       20000000000000000000000000000000000000000000000000000000002.
           ADD 1 TO COUNTER END-ADD
           EVALUATE COUNTER
           WHEN 1
           PERFORM
           100000000000000000000000000000000000000000000000000000000001
           WHEN 2
           PERFORM
           20000000000000000000000000000000000000000000000000000000002
           WHEN 3
           MOVE 0 TO COUNTER
           END-EVALUATE.

           STOP RUN.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
       PROCEDURE        DIVISION.

           *> Valid literals, depending on numeric literal size
           DISPLAY 1.0076, +100000.03, +1.0, -0078,
               +.1234567890123456789012345678901234
               .123456789012345678901234567890123450
           END-DISPLAY

           *> Invalid literals
           DISPLAY 1.03.0     END-DISPLAY
           DISPLAY --123      END-DISPLAY
           DISPLAY -123-      END-DISPLAY
           DISPLAY -123-456   END-DISPLAY
           DISPLAY -123-4.56  END-DISPLAY
           DISPLAY -12.3-456  END-DISPLAY
           DISPLAY -12.3-4.56 END-DISPLAY
           DISPLAY 1000003+   END-DISPLAY
           DISPLAY 1.000003+  END-DISPLAY
           DISPLAY .3+        END-DISPLAY
           DISPLAY 3.+        END-DISPLAY

           STOP RUN.
])

AT_DATA([prog3.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog3.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES. DECIMAL-POINT IS COMMA.
       PROCEDURE        DIVISION.

           *> Valid literals, depending on numeric literal size
           DISPLAY 1,0076, +100000,03, +1,0, -0078,
               +,1234567890123456789012345678901234
               ,123456789012345678901234567890123450
           END-DISPLAY

           *> Invalid literals
           DISPLAY 1,03,0     END-DISPLAY
           DISPLAY --123      END-DISPLAY
           DISPLAY -123-      END-DISPLAY
           DISPLAY -123-456   END-DISPLAY
           DISPLAY -123-4,56  END-DISPLAY
           DISPLAY -12,3-456  END-DISPLAY
           DISPLAY -12,3-4,56 END-DISPLAY
           DISPLAY 1000003+   END-DISPLAY
           DISPLAY 1,000003+  END-DISPLAY
           DISPLAY ,3+        END-DISPLAY
           DISPLAY 3,+        END-DISPLAY

           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -fliteral-length=1 -fnumeric-literal-length=1 -fword-length=60 prog.cob], [0], [], [])

# result with extended scanner for wrong numeric literals:
#AT_CHECK([$COMPILE_ONLY prog2.cob], [1], [],
#[prog2.cob:16: error: invalid numeric literal: '1.03.0'
#prog2.cob:16: error: literal with more than one decimal point
#prog2.cob:17: error: invalid numeric literal: '--123'
#prog2.cob:17: error: literal with more than one sign character
#prog2.cob:18: error: invalid numeric literal: '-123-'
#prog2.cob:18: error: literal with more than one sign character
#prog2.cob:19: error: invalid numeric literal: '-123-456'
#prog2.cob:19: error: literal with more than one sign character
#prog2.cob:20: error: invalid numeric literal: '-123-4.56'
#prog2.cob:20: error: literal with more than one sign character
#prog2.cob:21: error: invalid numeric literal: '-12.3-456'
#prog2.cob:21: error: literal with more than one sign character
#prog2.cob:22: error: invalid numeric literal: '-12.3-4.56'
#prog2.cob:22: error: literal with more than one sign character
#prog2.cob:22: error: literal with more than one decimal point
#prog2.cob:23: error: invalid numeric literal: '1000003+'
#prog2.cob:23: error: sign must appear as leftmost character
#prog2.cob:24: error: invalid numeric literal: '1.000003+'
#prog2.cob:24: error: sign must appear as leftmost character
#prog2.cob:25: error: invalid numeric literal: '.3+'
#prog2.cob:25: error: sign must appear as leftmost character
#prog2.cob:26: error: invalid numeric literal: '3.+'
#prog2.cob:26: error: sign must appear as leftmost character
#])
#AT_CHECK([$COMPILE_ONLY prog3.cob], [1], [],
#[prog3.cob:16: error: invalid numeric literal: '1,03,0'
#prog3.cob:16: error: literal with more than one decimal point
#prog3.cob:17: error: invalid numeric literal: '--123'
#prog3.cob:17: error: literal with more than one sign character
#prog3.cob:18: error: invalid numeric literal: '-123-'
#prog3.cob:18: error: literal with more than one sign character
#prog3.cob:19: error: invalid numeric literal: '-123-456'
#prog3.cob:19: error: literal with more than one sign character
#prog3.cob:20: error: invalid numeric literal: '-123-4,56'
#prog3.cob:20: error: literal with more than one sign character
#prog3.cob:21: error: invalid numeric literal: '-12,3-456'
#prog3.cob:21: error: literal with more than one sign character
#prog3.cob:22: error: invalid numeric literal: '-12,3-4,56'
#prog3.cob:22: error: literal with more than one sign character
#prog3.cob:22: error: literal with more than one decimal point
#prog3.cob:23: error: invalid numeric literal: '1000003+'
#prog3.cob:23: error: sign must appear as leftmost character
#prog3.cob:24: error: invalid numeric literal: '1,000003+'
#prog3.cob:24: error: sign must appear as leftmost character
#prog3.cob:25: error: invalid numeric literal: ',3+'
#prog3.cob:25: error: sign must appear as leftmost character
#prog3.cob:26: error: invalid numeric literal: '3,+'
#prog3.cob:26: error: sign must appear as leftmost character
#])

AT_CHECK([$COMPILE_ONLY prog2.cob], [1], [],
[prog2.cob:17: error: syntax error, unexpected -, expecting [(]
prog2.cob:18: error: syntax error, unexpected -
prog2.cob:23: error: syntax error, unexpected +
prog2.cob:24: error: syntax error, unexpected +
prog2.cob:25: error: syntax error, unexpected +
prog2.cob:26: error: syntax error, unexpected +
])
AT_CHECK([$COMPILE_ONLY prog3.cob], [1], [],
[prog3.cob:17: error: syntax error, unexpected -, expecting [(]
prog3.cob:18: error: syntax error, unexpected -
prog3.cob:23: error: syntax error, unexpected +
prog3.cob:24: error: syntax error, unexpected +
prog3.cob:25: error: syntax error, unexpected +
prog3.cob:26: error: syntax error, unexpected +
])

AT_CLEANUP


AT_SETUP([floating-point literals])
# Refer to Section 8.3.1.2.2.2 of COBOL 2014.
AT_KEYWORDS([misc])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           *> Valid literals
           DISPLAY 1.0E6144, +1.0E+3, +1.0E-6143, 123.E1,
               +.123456789012345678901234567890123456E+0000
           END-DISPLAY

           *> invalid literals
           DISPLAY 1.0D3 END-DISPLAY
           DISPLAY 1E3 END-DISPLAY
           DISPLAY '1.0E3'BLAH END-DISPLAY
           DISPLAY 1.0E3.0 END-DISPLAY
           DISPLAY -0.0E-0 END-DISPLAY
           DISPLAY 1.0E00003 END-DISPLAY
           DISPLAY .123456789012345678901234567890123456789E0
           END-DISPLAY
           DISPLAY 0.0E3 END-DISPLAY

           *> Implementor-defined invalid literals
           DISPLAY 1.0E6145 END-DISPLAY
           DISPLAY 1.0E-6144 END-DISPLAY

           STOP RUN.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       PROCEDURE        DIVISION.
           *> Valid literals
           DISPLAY 1,0E6144; +1,0E+3; +1,0E-6143; 123,E1;
               +,123456789012345678901234567890123456E+0000
           END-DISPLAY

           *> invalid literals
           DISPLAY 1,0D3 END-DISPLAY
           DISPLAY 1E3 END-DISPLAY
           DISPLAY 1,0E3BLAH END-DISPLAY
           DISPLAY 1,0E3,0 END-DISPLAY
           DISPLAY -0,0E-0 END-DISPLAY
           DISPLAY 1,0E00003 END-DISPLAY
           DISPLAY ,123456789012345678901234567890123456789E0
           END-DISPLAY
           DISPLAY 0,0E3 END-DISPLAY

           *> Implementor-defined invalid literals
           DISPLAY 1,0E6145 END-DISPLAY
           DISPLAY 1,0E-6144 END-DISPLAY

           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:11: error: 'D3' is not defined
prog.cob:12: error: '1E3' is not defined
prog.cob:13: error: 'BLAH' is not defined
prog.cob:14: error: invalid floating-point literal: '1.0E3.0'
prog.cob:14: error: exponent has decimal point
prog.cob:15: error: invalid floating-point literal: '-0.0E-0'
prog.cob:15: error: significand of 0 must be positive
prog.cob:15: error: exponent of 0 must be positive
prog.cob:16: error: invalid floating-point literal: '1.0E00003'
prog.cob:16: error: exponent has more than 4 digits
prog.cob:17: error: invalid floating-point literal: '.123456789012345678901234567890123 ...'
prog.cob:17: error: significand has more than 36 digits
prog.cob:19: error: invalid floating-point literal: '0.0E3'
prog.cob:19: error: exponent of 0 must be 0
prog.cob:22: error: invalid floating-point literal: '1.0E6145'
prog.cob:22: error: exponent not between -6143 and 6144
prog.cob:23: error: invalid floating-point literal: '1.0E-6144'
prog.cob:23: error: exponent not between -6143 and 6144
])

AT_CHECK([$COMPILE_ONLY prog2.cob], [1], [],
[prog2.cob:15: error: 'D3' is not defined
prog2.cob:16: error: '1E3' is not defined
prog2.cob:17: error: 'BLAH' is not defined
prog2.cob:18: error: invalid floating-point literal: '1,0E3,0'
prog2.cob:18: error: exponent has decimal point
prog2.cob:19: error: invalid floating-point literal: '-0,0E-0'
prog2.cob:19: error: significand of 0 must be positive
prog2.cob:19: error: exponent of 0 must be positive
prog2.cob:20: error: invalid floating-point literal: '1,0E00003'
prog2.cob:20: error: exponent has more than 4 digits
prog2.cob:21: error: invalid floating-point literal: ',123456789012345678901234567890123 ...'
prog2.cob:21: error: significand has more than 36 digits
prog2.cob:23: error: invalid floating-point literal: '0,0E3'
prog2.cob:23: error: exponent of 0 must be 0
prog2.cob:26: error: invalid floating-point literal: '1,0E6145'
prog2.cob:26: error: exponent not between -6143 and 6144
prog2.cob:27: error: invalid floating-point literal: '1,0E-6144'
prog2.cob:27: error: exponent not between -6143 and 6144
])

AT_CLEANUP


AT_SETUP([X literals])
AT_KEYWORDS([misc])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    prog.
       PROCEDURE      DIVISION.
           *> Valid form
           DISPLAY X"0123456789ABCDEF"

           *> invalid form
           DISPLAY X"GH"
                   X"1"
           END-DISPLAY.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:9: error: invalid X literal: 'GH'
prog.cob:9: error: literal contains invalid character 'G'
prog.cob:9: error: literal contains invalid character 'H'
prog.cob:10: error: invalid X literal: '1'
prog.cob:10: error: literal does not have an even number of digits
])

AT_CLEANUP


AT_SETUP([national literals])
AT_KEYWORDS([misc])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    prog.
       PROCEDURE      DIVISION.
           DISPLAY N"UTF-16 string".
           DISPLAY N'0123456789ABCDEF'.
           DISPLAY N"0123456789ABCDEF"-
                   N"0123456789ABCDEF".
           DISPLAY NC"0123456789ABCDEF"-
                   NC'0123456789ABCDEF'.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [0], [],
[prog.cob:5: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:6: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:7: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:8: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:9: warning: national-character literal used
prog.cob:9: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:10: warning: national-character literal used
prog.cob:10: warning: handling of national literal is unfinished; implementation is likely to be changed
])

AT_CHECK([$COMPILE_ONLY -std=cobol85 prog.cob], [1], [],
[prog.cob:5: error: national literal does not conform to COBOL 85
prog.cob:6: error: national literal does not conform to COBOL 85
prog.cob:7: error: national literal does not conform to COBOL 85
prog.cob:8: error: national literal does not conform to COBOL 85
prog.cob:9: error: national-character literal does not conform to COBOL 85
prog.cob:10: error: national-character literal does not conform to COBOL 85
])

AT_CLEANUP


AT_SETUP([NX literals])
AT_KEYWORDS([misc])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    prog.
       PROCEDURE      DIVISION.
           *> Valid form
           DISPLAY NX"265E"
           DISPLAY NX"0123456789ABCDEF"

           *> invalid form
           DISPLAY NX"GH"
                   NX"1".
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:6: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:7: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:10: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:10: error: invalid NX literal: 'GH'
prog.cob:10: error: literal contains invalid character 'G'
prog.cob:10: error: literal contains invalid character 'H'
prog.cob:11: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:11: error: invalid NX literal: '1'
prog.cob:11: error: literal does not have an even number of digits
])

AT_CHECK([$COMPILE_ONLY -std=cobol85 prog.cob], [1], [],
[prog.cob:6: error: hexadecimal-national literal does not conform to COBOL 85
prog.cob:7: error: hexadecimal-national literal does not conform to COBOL 85
prog.cob:10: error: hexadecimal-national literal does not conform to COBOL 85
prog.cob:11: error: hexadecimal-national literal does not conform to COBOL 85
])

AT_CLEANUP


AT_SETUP([binary literals])
AT_KEYWORDS([misc extensions])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           DISPLAY B"101010"
           DISPLAY B"111111111111111111111111111111111111111111111111111
      -             "1111111111111" *> " Syntax highlighting hack

           DISPLAY B"23"
           DISPLAY B"111111111111111111111111111111111111111111111111111
      -             "111111111111111111111111111111111111111111111111111
      -             "11111111111111111111111111111111111111111111111111"
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -std=mf prog.cob], [1], [],
[prog.cob:9: error: invalid B literal: '23'
prog.cob:9: error: literal contains invalid character '2'
prog.cob:9: error: literal contains invalid character '3'
prog.cob:10: error: invalid B literal: '1111111111111111111111111111111111 ...'
prog.cob:10: error: literal length 152 exceeds 64 characters
])

AT_CHECK([$COMPILE_ONLY -std=cobol85 prog.cob], [1], [],
[prog.cob:5: error: numeric boolean literal does not conform to COBOL 85
prog.cob:6: error: numeric boolean literal does not conform to COBOL 85
prog.cob:9: error: numeric boolean literal does not conform to COBOL 85
prog.cob:10: error: numeric boolean literal does not conform to COBOL 85
])

AT_CLEANUP


AT_SETUP([binary-hexadecimal literals])
AT_KEYWORDS([misc extensions])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           DISPLAY BX"AB05CD0F"
           DISPLAY        BX"0123456789ABCDEF0123456789ABCDEF0123456789A
      -              "BCDEF" *> " Syntax highlighting hack

           DISPLAY BX"A"
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:6: error: invalid BX literal: '0123456789ABCDEF0123456789ABCDEF01 ...'
prog.cob:6: error: literal length 192 exceeds 64 characters
])

AT_CHECK([$COMPILE_ONLY -std=cobol85 prog.cob], [1], [],
[prog.cob:5: error: hexadecimal-boolean literal does not conform to COBOL 85
prog.cob:6: error: hexadecimal-boolean literal does not conform to COBOL 85
prog.cob:9: error: hexadecimal-boolean literal does not conform to COBOL 85
])

AT_CLEANUP


AT_SETUP([HP COBOL octal literals])
AT_KEYWORDS([misc extensions])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           *> Valid forms
           DISPLAY %17 %37777777777 %456

           *> invalid forms
           DISPLAY %11111111111111111111111
           DISPLAY %89

           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -Wno-unfinished -fhp-octal-literals=ok prog.cob], [1], [],
[prog.cob:9: error: invalid % literal: '11111111111111111111111'
prog.cob:9: error: literal length 23 exceeds 22 characters
prog.cob:10: error: invalid % literal: '89'
prog.cob:10: error: literal contains invalid character '8'
prog.cob:10: error: literal contains invalid character '9'
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob:6: error: HP COBOL octal literal does not conform to COBOL 2014
prog.cob:6: error: HP COBOL octal literal does not conform to COBOL 2014
prog.cob:6: error: HP COBOL octal literal does not conform to COBOL 2014
prog.cob:9: error: HP COBOL octal literal does not conform to COBOL 2014
prog.cob:10: error: HP COBOL octal literal does not conform to COBOL 2014
])

AT_CLEANUP


AT_SETUP([ACUCOBOL literals])
AT_KEYWORDS([misc acu extensions binary octal hexadecimal])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           *> Valid forms
           DISPLAY B#10 O#12345670123 X#12345678 H#90aBcDeF
           END-DISPLAY

           *> invalid forms
       >>SOURCE FREE
           DISPLAY B#11111111111111111111111111111111111111111111111111111111111111111
               O#11111111111111111111111 X#11111111111111111 H#22222222222222222
       >>SOURCE FIXED
           DISPLAY B#23 O#89 X#GG H#HH

           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY -std=acu prog.cob], [1], [],
[prog.cob:11: error: invalid B# literal: '1111111111111111111111111111111111 ...'
prog.cob:11: error: literal length 65 exceeds 64 characters
prog.cob:12: error: invalid O# literal: '11111111111111111111111'
prog.cob:12: error: literal length 23 exceeds 22 characters
prog.cob:12: error: invalid hexadecimal literal: '11111111111111111'
prog.cob:12: error: literal length 17 exceeds 16 characters
prog.cob:12: error: invalid hexadecimal literal: '22222222222222222'
prog.cob:12: error: literal length 17 exceeds 16 characters
prog.cob:14: error: invalid B# literal: '23'
prog.cob:14: error: literal contains invalid character '2'
prog.cob:14: error: literal contains invalid character '3'
prog.cob:14: error: invalid O# literal: '89'
prog.cob:14: error: literal contains invalid character '8'
prog.cob:14: error: literal contains invalid character '9'
prog.cob:14: error: invalid X# literal: 'GG'
prog.cob:14: error: literal contains invalid character 'G'
prog.cob:14: error: literal contains invalid character 'G'
prog.cob:14: error: invalid H# literal: 'HH'
prog.cob:14: error: literal contains invalid character 'H'
prog.cob:14: error: literal contains invalid character 'H'
])

AT_CHECK([$COMPILE_ONLY -std=cobol2014 prog.cob], [1], [],
[prog.cob:6: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:6: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:6: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:6: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:11: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:12: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:12: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:12: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:14: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:14: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:14: error: ACUCOBOL numeric literal does not conform to COBOL 2014
prog.cob:14: error: ACUCOBOL numeric literal does not conform to COBOL 2014
])

AT_CLEANUP


AT_SETUP([ACUCOBOL 32bit literal size])
# ACUCOBOL literal max - the result is system dependent on size of unsigned long int
AT_SKIP_IF([true])

AT_KEYWORDS([extensions literals])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.

       >>SOURCE FREE
           DISPLAY B#1111111111111111111111111111111111111111111111111111111111111111
               O#1111111111111111111111 X#1111111111111111

           STOP RUN.
])

#AT_CHECK([$COMPILE_ONLY -std=acu prog.cob], [0], [], [])
# TODO check the result according to COB_32_BIT_LONG --> 1 should result in the following
AT_CHECK([$COMPILE_ONLY -std=acu prog.cob], [1], [],
[prog.cob:7: error: invalid B# literal: '11111111111111111111111111111111111...'
prog.cob:7: error: literal exceeds limit 4294967295
prog.cob:8: error: invalid O# literal: '1111111111111111111111'
prog.cob:8: error: literal exceeds limit 4294967295
prog.cob:8: error: invalid X# literal: '1111111111111111'
prog.cob:8: error: literal exceeds limit 4294967295
])
AT_CLEANUP


AT_SETUP([zero-length literals])
AT_KEYWORDS([misc])

AT_DATA([prog.cob], [
       IDENTIFICATION  DIVISION.
       PROGRAM-ID.     prog.

       DATA            DIVISION.
       WORKING-STORAGE SECTION.
       01  x           PIC X.
       01  nat         PIC N.
       01  n           PIC 9.

       PROCEDURE       DIVISION.
           MOVE X''  TO x
           MOVE H''  TO n
           MOVE Z''  TO x
           MOVE L''  TO x
           MOVE N""  TO nat
           MOVE NX'' TO nat
           MOVE B""  TO n
           MOVE BX"" TO n
           .
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:8: warning: handling of USAGE NATIONAL is unfinished; implementation is likely to be changed
prog.cob:12: warning: hexadecimal literal has zero length; X'00' will be assumed
prog.cob:13: error: H literals must contain at least one character
prog.cob:14: error: invalid Z literal: ''
prog.cob:14: error: Z literals must contain at least one character
prog.cob:15: error: invalid L literal: ''
prog.cob:15: error: L literals must contain at least one character
prog.cob:16: warning: national literal has zero length; a SPACE will be assumed
prog.cob:16: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:17: warning: hexadecimal literal has zero length; X'00' will be assumed
prog.cob:18: warning: Boolean literal has zero length; B'0' will be assumed
prog.cob:19: warning: hexadecimal literal has zero length; X'00' will be assumed
])
AT_CHECK([$COMPILE_ONLY -fzero-length-literals=error prog.cob], [1], [],
[prog.cob:8: warning: handling of USAGE NATIONAL is unfinished; implementation is likely to be changed
prog.cob:12: error: zero-length literal used
prog.cob:12: warning: hexadecimal literal has zero length; X'00' will be assumed
prog.cob:13: error: H literals must contain at least one character
prog.cob:14: error: invalid Z literal: ''
prog.cob:14: error: Z literals must contain at least one character
prog.cob:15: error: invalid L literal: ''
prog.cob:15: error: L literals must contain at least one character
prog.cob:16: error: zero-length literal used
prog.cob:16: warning: national literal has zero length; a SPACE will be assumed
prog.cob:16: warning: handling of national literal is unfinished; implementation is likely to be changed
prog.cob:17: error: zero-length literal used
prog.cob:17: warning: hexadecimal literal has zero length; X'00' will be assumed
prog.cob:18: error: zero-length literal used
prog.cob:18: warning: Boolean literal has zero length; B'0' will be assumed
prog.cob:19: error: zero-length literal used
prog.cob:19: warning: hexadecimal literal has zero length; X'00' will be assumed
])
AT_CLEANUP


AT_SETUP([long literal in error message])
AT_KEYWORDS([misc literals])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      tutorial.
       PROCEDURE DIVISION.
           move low-values to
           ' 1  c d e f g h i j k l m n 0 q.'-
           ' 2  C D E F G H I J K L M N 0 Q.'-
           ' 3  c d e f g h i j k l m n 0 q.'-
           ' 4  C D E F G H I J K L M N 0 Q.'-
           ' 5  c d e f g h i j k l m n 0 q.'-
           ' 6  C D E F G H I J K L M N 0 Q.'-
           ' 7  c d e f g h i j k l m n 0 q.'-
           ' 8  C D E F G H I J K L M N 0 Q.'-
           ' 9  c d e f g h i j k l m n 0 q.'-
           '10  C D E F G H I J K L M N 0 Q.'-
           '11  c d e f g h i j k l m n 0 q.'-
           '12  C D E F G H I J K L M N 0 Q.'-
           '13  c d e f g h i j k l m n 0 q.'-
           '14  C D E F G H I J K L M N 0 Q.'-
           '15  c d e f g h i j k l m n 0 q.'.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob:5: error: invalid MOVE target: literal " 1  c d e f g h i j k l m n 0 q. 2 ..."
])

AT_CLEANUP


AT_SETUP([literal missing terminating character])
AT_KEYWORDS([misc literals terminator])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      tutorial.
       PROCEDURE DIVISION.
           DISPLAY ' 1  c d e f g h i j k l m n 0 q.
      -            ' 2  C D E F G H I J K L M N 0 Q.
])

# FIXME: we should move this from scanner to pplex to preserve the spaces
# [prog.cob:5: error: invalid literal: ' 1  c d e f g h i j k l m n 0 q. ...'
AT_CHECK([$COMPILE_ONLY -w prog.cob], [1], [],
[prog.cob:5: error: invalid literal: ' 1 c d e f g h i j k l m n 0 q. 2  ...'
prog.cob:5: error: missing terminating ' character
])

AT_CLEANUP
